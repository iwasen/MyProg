'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.0.3705.288
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class dsTable
    Inherits DataSet
    
    Private tableパーツ種別マスタ As パーツ種別マスタDataTable
    
    Private tableパーツ展開マスタ As パーツ展開マスタDataTable
    
    Private tableユーザマスタ As ユーザマスタDataTable
    
    Private table顧客マスタ As 顧客マスタDataTable
    
    Private table在庫変更履歴 As 在庫変更履歴DataTable
    
    Private tableパーツ在庫マスタ As パーツ在庫マスタDataTable
    
    Private table受注データ As 受注データDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("パーツ種別マスタ")) Is Nothing) Then
                Me.Tables.Add(New パーツ種別マスタDataTable(ds.Tables("パーツ種別マスタ")))
            End If
            If (Not (ds.Tables("パーツ展開マスタ")) Is Nothing) Then
                Me.Tables.Add(New パーツ展開マスタDataTable(ds.Tables("パーツ展開マスタ")))
            End If
            If (Not (ds.Tables("ユーザマスタ")) Is Nothing) Then
                Me.Tables.Add(New ユーザマスタDataTable(ds.Tables("ユーザマスタ")))
            End If
            If (Not (ds.Tables("顧客マスタ")) Is Nothing) Then
                Me.Tables.Add(New 顧客マスタDataTable(ds.Tables("顧客マスタ")))
            End If
            If (Not (ds.Tables("在庫変更履歴")) Is Nothing) Then
                Me.Tables.Add(New 在庫変更履歴DataTable(ds.Tables("在庫変更履歴")))
            End If
            If (Not (ds.Tables("パーツ在庫マスタ")) Is Nothing) Then
                Me.Tables.Add(New パーツ在庫マスタDataTable(ds.Tables("パーツ在庫マスタ")))
            End If
            If (Not (ds.Tables("受注データ")) Is Nothing) Then
                Me.Tables.Add(New 受注データDataTable(ds.Tables("受注データ")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property パーツ種別マスタ As パーツ種別マスタDataTable
        Get
            Return Me.tableパーツ種別マスタ
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property パーツ展開マスタ As パーツ展開マスタDataTable
        Get
            Return Me.tableパーツ展開マスタ
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ユーザマスタ As ユーザマスタDataTable
        Get
            Return Me.tableユーザマスタ
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property 顧客マスタ As 顧客マスタDataTable
        Get
            Return Me.table顧客マスタ
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property 在庫変更履歴 As 在庫変更履歴DataTable
        Get
            Return Me.table在庫変更履歴
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property パーツ在庫マスタ As パーツ在庫マスタDataTable
        Get
            Return Me.tableパーツ在庫マスタ
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property 受注データ As 受注データDataTable
        Get
            Return Me.table受注データ
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As dsTable = CType(MyBase.Clone,dsTable)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("パーツ種別マスタ")) Is Nothing) Then
            Me.Tables.Add(New パーツ種別マスタDataTable(ds.Tables("パーツ種別マスタ")))
        End If
        If (Not (ds.Tables("パーツ展開マスタ")) Is Nothing) Then
            Me.Tables.Add(New パーツ展開マスタDataTable(ds.Tables("パーツ展開マスタ")))
        End If
        If (Not (ds.Tables("ユーザマスタ")) Is Nothing) Then
            Me.Tables.Add(New ユーザマスタDataTable(ds.Tables("ユーザマスタ")))
        End If
        If (Not (ds.Tables("顧客マスタ")) Is Nothing) Then
            Me.Tables.Add(New 顧客マスタDataTable(ds.Tables("顧客マスタ")))
        End If
        If (Not (ds.Tables("在庫変更履歴")) Is Nothing) Then
            Me.Tables.Add(New 在庫変更履歴DataTable(ds.Tables("在庫変更履歴")))
        End If
        If (Not (ds.Tables("パーツ在庫マスタ")) Is Nothing) Then
            Me.Tables.Add(New パーツ在庫マスタDataTable(ds.Tables("パーツ在庫マスタ")))
        End If
        If (Not (ds.Tables("受注データ")) Is Nothing) Then
            Me.Tables.Add(New 受注データDataTable(ds.Tables("受注データ")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableパーツ種別マスタ = CType(Me.Tables("パーツ種別マスタ"),パーツ種別マスタDataTable)
        If (Not (Me.tableパーツ種別マスタ) Is Nothing) Then
            Me.tableパーツ種別マスタ.InitVars
        End If
        Me.tableパーツ展開マスタ = CType(Me.Tables("パーツ展開マスタ"),パーツ展開マスタDataTable)
        If (Not (Me.tableパーツ展開マスタ) Is Nothing) Then
            Me.tableパーツ展開マスタ.InitVars
        End If
        Me.tableユーザマスタ = CType(Me.Tables("ユーザマスタ"),ユーザマスタDataTable)
        If (Not (Me.tableユーザマスタ) Is Nothing) Then
            Me.tableユーザマスタ.InitVars
        End If
        Me.table顧客マスタ = CType(Me.Tables("顧客マスタ"),顧客マスタDataTable)
        If (Not (Me.table顧客マスタ) Is Nothing) Then
            Me.table顧客マスタ.InitVars
        End If
        Me.table在庫変更履歴 = CType(Me.Tables("在庫変更履歴"),在庫変更履歴DataTable)
        If (Not (Me.table在庫変更履歴) Is Nothing) Then
            Me.table在庫変更履歴.InitVars
        End If
        Me.tableパーツ在庫マスタ = CType(Me.Tables("パーツ在庫マスタ"),パーツ在庫マスタDataTable)
        If (Not (Me.tableパーツ在庫マスタ) Is Nothing) Then
            Me.tableパーツ在庫マスタ.InitVars
        End If
        Me.table受注データ = CType(Me.Tables("受注データ"),受注データDataTable)
        If (Not (Me.table受注データ) Is Nothing) Then
            Me.table受注データ.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "dsTable"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsTable.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableパーツ種別マスタ = New パーツ種別マスタDataTable
        Me.Tables.Add(Me.tableパーツ種別マスタ)
        Me.tableパーツ展開マスタ = New パーツ展開マスタDataTable
        Me.Tables.Add(Me.tableパーツ展開マスタ)
        Me.tableユーザマスタ = New ユーザマスタDataTable
        Me.Tables.Add(Me.tableユーザマスタ)
        Me.table顧客マスタ = New 顧客マスタDataTable
        Me.Tables.Add(Me.table顧客マスタ)
        Me.table在庫変更履歴 = New 在庫変更履歴DataTable
        Me.Tables.Add(Me.table在庫変更履歴)
        Me.tableパーツ在庫マスタ = New パーツ在庫マスタDataTable
        Me.Tables.Add(Me.tableパーツ在庫マスタ)
        Me.table受注データ = New 受注データDataTable
        Me.Tables.Add(Me.table受注データ)
    End Sub
    
    Private Function ShouldSerializeパーツ種別マスタ() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeパーツ展開マスタ() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeユーザマスタ() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerialize顧客マスタ() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerialize在庫変更履歴() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeパーツ在庫マスタ() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerialize受注データ() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub パーツ種別マスタRowChangeEventHandler(ByVal sender As Object, ByVal e As パーツ種別マスタRowChangeEvent)
    
    Public Delegate Sub パーツ展開マスタRowChangeEventHandler(ByVal sender As Object, ByVal e As パーツ展開マスタRowChangeEvent)
    
    Public Delegate Sub ユーザマスタRowChangeEventHandler(ByVal sender As Object, ByVal e As ユーザマスタRowChangeEvent)
    
    Public Delegate Sub 顧客マスタRowChangeEventHandler(ByVal sender As Object, ByVal e As 顧客マスタRowChangeEvent)
    
    Public Delegate Sub 在庫変更履歴RowChangeEventHandler(ByVal sender As Object, ByVal e As 在庫変更履歴RowChangeEvent)
    
    Public Delegate Sub パーツ在庫マスタRowChangeEventHandler(ByVal sender As Object, ByVal e As パーツ在庫マスタRowChangeEvent)
    
    Public Delegate Sub 受注データRowChangeEventHandler(ByVal sender As Object, ByVal e As 受注データRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class パーツ種別マスタDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnパーツ種別コード As DataColumn
        
        Private columnパーツ種別名 As DataColumn
        
        Friend Sub New()
            MyBase.New("パーツ種別マスタ")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property パーツ種別コードColumn As DataColumn
            Get
                Return Me.columnパーツ種別コード
            End Get
        End Property
        
        Friend ReadOnly Property パーツ種別名Column As DataColumn
            Get
                Return Me.columnパーツ種別名
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As パーツ種別マスタRow
            Get
                Return CType(Me.Rows(index),パーツ種別マスタRow)
            End Get
        End Property
        
        Public Event パーツ種別マスタRowChanged As パーツ種別マスタRowChangeEventHandler
        
        Public Event パーツ種別マスタRowChanging As パーツ種別マスタRowChangeEventHandler
        
        Public Event パーツ種別マスタRowDeleted As パーツ種別マスタRowChangeEventHandler
        
        Public Event パーツ種別マスタRowDeleting As パーツ種別マスタRowChangeEventHandler
        
        Public Overloads Sub Addパーツ種別マスタRow(ByVal row As パーツ種別マスタRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addパーツ種別マスタRow(ByVal パーツ種別コード As String, ByVal パーツ種別名 As String) As パーツ種別マスタRow
            Dim rowパーツ種別マスタRow As パーツ種別マスタRow = CType(Me.NewRow,パーツ種別マスタRow)
            rowパーツ種別マスタRow.ItemArray = New Object() {パーツ種別コード, パーツ種別名}
            Me.Rows.Add(rowパーツ種別マスタRow)
            Return rowパーツ種別マスタRow
        End Function
        
        Public Function FindByパーツ種別コード(ByVal パーツ種別コード As String) As パーツ種別マスタRow
            Return CType(Me.Rows.Find(New Object() {パーツ種別コード}),パーツ種別マスタRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As パーツ種別マスタDataTable = CType(MyBase.Clone,パーツ種別マスタDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New パーツ種別マスタDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnパーツ種別コード = Me.Columns("パーツ種別コード")
            Me.columnパーツ種別名 = Me.Columns("パーツ種別名")
        End Sub
        
        Private Sub InitClass()
            Me.columnパーツ種別コード = New DataColumn("パーツ種別コード", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ種別コード)
            Me.columnパーツ種別名 = New DataColumn("パーツ種別名", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ種別名)
            Me.Constraints.Add(New UniqueConstraint("dsTableKey2", New DataColumn() {Me.columnパーツ種別コード}, true))
            Me.columnパーツ種別コード.AllowDBNull = false
            Me.columnパーツ種別コード.Unique = true
        End Sub
        
        Public Function Newパーツ種別マスタRow() As パーツ種別マスタRow
            Return CType(Me.NewRow,パーツ種別マスタRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New パーツ種別マスタRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(パーツ種別マスタRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.パーツ種別マスタRowChangedEvent) Is Nothing) Then
                RaiseEvent パーツ種別マスタRowChanged(Me, New パーツ種別マスタRowChangeEvent(CType(e.Row,パーツ種別マスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.パーツ種別マスタRowChangingEvent) Is Nothing) Then
                RaiseEvent パーツ種別マスタRowChanging(Me, New パーツ種別マスタRowChangeEvent(CType(e.Row,パーツ種別マスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.パーツ種別マスタRowDeletedEvent) Is Nothing) Then
                RaiseEvent パーツ種別マスタRowDeleted(Me, New パーツ種別マスタRowChangeEvent(CType(e.Row,パーツ種別マスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.パーツ種別マスタRowDeletingEvent) Is Nothing) Then
                RaiseEvent パーツ種別マスタRowDeleting(Me, New パーツ種別マスタRowChangeEvent(CType(e.Row,パーツ種別マスタRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeパーツ種別マスタRow(ByVal row As パーツ種別マスタRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class パーツ種別マスタRow
        Inherits DataRow
        
        Private tableパーツ種別マスタ As パーツ種別マスタDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableパーツ種別マスタ = CType(Me.Table,パーツ種別マスタDataTable)
        End Sub
        
        Public Property パーツ種別コード As String
            Get
                Return CType(Me(Me.tableパーツ種別マスタ.パーツ種別コードColumn),String)
            End Get
            Set
                Me(Me.tableパーツ種別マスタ.パーツ種別コードColumn) = value
            End Set
        End Property
        
        Public Property パーツ種別名 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ種別マスタ.パーツ種別名Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ種別マスタ.パーツ種別名Column) = value
            End Set
        End Property
        
        Public Function Isパーツ種別名Null() As Boolean
            Return Me.IsNull(Me.tableパーツ種別マスタ.パーツ種別名Column)
        End Function
        
        Public Sub Setパーツ種別名Null()
            Me(Me.tableパーツ種別マスタ.パーツ種別名Column) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class パーツ種別マスタRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As パーツ種別マスタRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As パーツ種別マスタRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As パーツ種別マスタRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class パーツ展開マスタDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private column商品名称 As DataColumn
        
        Private columnパーツ1 As DataColumn
        
        Private column数量1 As DataColumn
        
        Private columnパーツ2 As DataColumn
        
        Private column数量2 As DataColumn
        
        Private columnパーツ3 As DataColumn
        
        Private column数量3 As DataColumn
        
        Private columnパーツ4 As DataColumn
        
        Private column数量4 As DataColumn
        
        Private columnパーツ5 As DataColumn
        
        Private column数量5 As DataColumn
        
        Private columnパーツ6 As DataColumn
        
        Private column数量6 As DataColumn
        
        Private columnパーツ7 As DataColumn
        
        Private column数量7 As DataColumn
        
        Private columnパーツ8 As DataColumn
        
        Private column数量8 As DataColumn
        
        Private columnパーツ9 As DataColumn
        
        Private column数量9 As DataColumn
        
        Private columnパーツ10 As DataColumn
        
        Private column数量10 As DataColumn
        
        Private columnパーツ11 As DataColumn
        
        Private column数量11 As DataColumn
        
        Private columnパーツ12 As DataColumn
        
        Private column数量12 As DataColumn
        
        Private columnパーツ13 As DataColumn
        
        Private column数量13 As DataColumn
        
        Private columnパーツ14 As DataColumn
        
        Private column数量14 As DataColumn
        
        Private columnパーツ15 As DataColumn
        
        Private column数量15 As DataColumn
        
        Friend Sub New()
            MyBase.New("パーツ展開マスタ")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property 商品名称Column As DataColumn
            Get
                Return Me.column商品名称
            End Get
        End Property
        
        Friend ReadOnly Property パーツ1Column As DataColumn
            Get
                Return Me.columnパーツ1
            End Get
        End Property
        
        Friend ReadOnly Property 数量1Column As DataColumn
            Get
                Return Me.column数量1
            End Get
        End Property
        
        Friend ReadOnly Property パーツ2Column As DataColumn
            Get
                Return Me.columnパーツ2
            End Get
        End Property
        
        Friend ReadOnly Property 数量2Column As DataColumn
            Get
                Return Me.column数量2
            End Get
        End Property
        
        Friend ReadOnly Property パーツ3Column As DataColumn
            Get
                Return Me.columnパーツ3
            End Get
        End Property
        
        Friend ReadOnly Property 数量3Column As DataColumn
            Get
                Return Me.column数量3
            End Get
        End Property
        
        Friend ReadOnly Property パーツ4Column As DataColumn
            Get
                Return Me.columnパーツ4
            End Get
        End Property
        
        Friend ReadOnly Property 数量4Column As DataColumn
            Get
                Return Me.column数量4
            End Get
        End Property
        
        Friend ReadOnly Property パーツ5Column As DataColumn
            Get
                Return Me.columnパーツ5
            End Get
        End Property
        
        Friend ReadOnly Property 数量5Column As DataColumn
            Get
                Return Me.column数量5
            End Get
        End Property
        
        Friend ReadOnly Property パーツ6Column As DataColumn
            Get
                Return Me.columnパーツ6
            End Get
        End Property
        
        Friend ReadOnly Property 数量6Column As DataColumn
            Get
                Return Me.column数量6
            End Get
        End Property
        
        Friend ReadOnly Property パーツ7Column As DataColumn
            Get
                Return Me.columnパーツ7
            End Get
        End Property
        
        Friend ReadOnly Property 数量7Column As DataColumn
            Get
                Return Me.column数量7
            End Get
        End Property
        
        Friend ReadOnly Property パーツ8Column As DataColumn
            Get
                Return Me.columnパーツ8
            End Get
        End Property
        
        Friend ReadOnly Property 数量8Column As DataColumn
            Get
                Return Me.column数量8
            End Get
        End Property
        
        Friend ReadOnly Property パーツ9Column As DataColumn
            Get
                Return Me.columnパーツ9
            End Get
        End Property
        
        Friend ReadOnly Property 数量9Column As DataColumn
            Get
                Return Me.column数量9
            End Get
        End Property
        
        Friend ReadOnly Property パーツ10Column As DataColumn
            Get
                Return Me.columnパーツ10
            End Get
        End Property
        
        Friend ReadOnly Property 数量10Column As DataColumn
            Get
                Return Me.column数量10
            End Get
        End Property
        
        Friend ReadOnly Property パーツ11Column As DataColumn
            Get
                Return Me.columnパーツ11
            End Get
        End Property
        
        Friend ReadOnly Property 数量11Column As DataColumn
            Get
                Return Me.column数量11
            End Get
        End Property
        
        Friend ReadOnly Property パーツ12Column As DataColumn
            Get
                Return Me.columnパーツ12
            End Get
        End Property
        
        Friend ReadOnly Property 数量12Column As DataColumn
            Get
                Return Me.column数量12
            End Get
        End Property
        
        Friend ReadOnly Property パーツ13Column As DataColumn
            Get
                Return Me.columnパーツ13
            End Get
        End Property
        
        Friend ReadOnly Property 数量13Column As DataColumn
            Get
                Return Me.column数量13
            End Get
        End Property
        
        Friend ReadOnly Property パーツ14Column As DataColumn
            Get
                Return Me.columnパーツ14
            End Get
        End Property
        
        Friend ReadOnly Property 数量14Column As DataColumn
            Get
                Return Me.column数量14
            End Get
        End Property
        
        Friend ReadOnly Property パーツ15Column As DataColumn
            Get
                Return Me.columnパーツ15
            End Get
        End Property
        
        Friend ReadOnly Property 数量15Column As DataColumn
            Get
                Return Me.column数量15
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As パーツ展開マスタRow
            Get
                Return CType(Me.Rows(index),パーツ展開マスタRow)
            End Get
        End Property
        
        Public Event パーツ展開マスタRowChanged As パーツ展開マスタRowChangeEventHandler
        
        Public Event パーツ展開マスタRowChanging As パーツ展開マスタRowChangeEventHandler
        
        Public Event パーツ展開マスタRowDeleted As パーツ展開マスタRowChangeEventHandler
        
        Public Event パーツ展開マスタRowDeleting As パーツ展開マスタRowChangeEventHandler
        
        Public Overloads Sub Addパーツ展開マスタRow(ByVal row As パーツ展開マスタRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addパーツ展開マスタRow( _
                    ByVal 商品名称 As String,  _
                    ByVal パーツ1 As String,  _
                    ByVal 数量1 As Integer,  _
                    ByVal パーツ2 As String,  _
                    ByVal 数量2 As Integer,  _
                    ByVal パーツ3 As String,  _
                    ByVal 数量3 As Integer,  _
                    ByVal パーツ4 As String,  _
                    ByVal 数量4 As Integer,  _
                    ByVal パーツ5 As String,  _
                    ByVal 数量5 As Integer,  _
                    ByVal パーツ6 As String,  _
                    ByVal 数量6 As Integer,  _
                    ByVal パーツ7 As String,  _
                    ByVal 数量7 As Integer,  _
                    ByVal パーツ8 As String,  _
                    ByVal 数量8 As Integer,  _
                    ByVal パーツ9 As String,  _
                    ByVal 数量9 As Integer,  _
                    ByVal パーツ10 As String,  _
                    ByVal 数量10 As Integer,  _
                    ByVal パーツ11 As String,  _
                    ByVal 数量11 As Integer,  _
                    ByVal パーツ12 As String,  _
                    ByVal 数量12 As Integer,  _
                    ByVal パーツ13 As String,  _
                    ByVal 数量13 As Integer,  _
                    ByVal パーツ14 As String,  _
                    ByVal 数量14 As Integer,  _
                    ByVal パーツ15 As String,  _
                    ByVal 数量15 As Integer) As パーツ展開マスタRow
            Dim rowパーツ展開マスタRow As パーツ展開マスタRow = CType(Me.NewRow,パーツ展開マスタRow)
            rowパーツ展開マスタRow.ItemArray = New Object() {商品名称, パーツ1, 数量1, パーツ2, 数量2, パーツ3, 数量3, パーツ4, 数量4, パーツ5, 数量5, パーツ6, 数量6, パーツ7, 数量7, パーツ8, 数量8, パーツ9, 数量9, パーツ10, 数量10, パーツ11, 数量11, パーツ12, 数量12, パーツ13, 数量13, パーツ14, 数量14, パーツ15, 数量15}
            Me.Rows.Add(rowパーツ展開マスタRow)
            Return rowパーツ展開マスタRow
        End Function
        
        Public Function FindBy商品名称(ByVal 商品名称 As String) As パーツ展開マスタRow
            Return CType(Me.Rows.Find(New Object() {商品名称}),パーツ展開マスタRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As パーツ展開マスタDataTable = CType(MyBase.Clone,パーツ展開マスタDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New パーツ展開マスタDataTable
        End Function
        
        Friend Sub InitVars()
            Me.column商品名称 = Me.Columns("商品名称")
            Me.columnパーツ1 = Me.Columns("パーツ1")
            Me.column数量1 = Me.Columns("数量1")
            Me.columnパーツ2 = Me.Columns("パーツ2")
            Me.column数量2 = Me.Columns("数量2")
            Me.columnパーツ3 = Me.Columns("パーツ3")
            Me.column数量3 = Me.Columns("数量3")
            Me.columnパーツ4 = Me.Columns("パーツ4")
            Me.column数量4 = Me.Columns("数量4")
            Me.columnパーツ5 = Me.Columns("パーツ5")
            Me.column数量5 = Me.Columns("数量5")
            Me.columnパーツ6 = Me.Columns("パーツ6")
            Me.column数量6 = Me.Columns("数量6")
            Me.columnパーツ7 = Me.Columns("パーツ7")
            Me.column数量7 = Me.Columns("数量7")
            Me.columnパーツ8 = Me.Columns("パーツ8")
            Me.column数量8 = Me.Columns("数量8")
            Me.columnパーツ9 = Me.Columns("パーツ9")
            Me.column数量9 = Me.Columns("数量9")
            Me.columnパーツ10 = Me.Columns("パーツ10")
            Me.column数量10 = Me.Columns("数量10")
            Me.columnパーツ11 = Me.Columns("パーツ11")
            Me.column数量11 = Me.Columns("数量11")
            Me.columnパーツ12 = Me.Columns("パーツ12")
            Me.column数量12 = Me.Columns("数量12")
            Me.columnパーツ13 = Me.Columns("パーツ13")
            Me.column数量13 = Me.Columns("数量13")
            Me.columnパーツ14 = Me.Columns("パーツ14")
            Me.column数量14 = Me.Columns("数量14")
            Me.columnパーツ15 = Me.Columns("パーツ15")
            Me.column数量15 = Me.Columns("数量15")
        End Sub
        
        Private Sub InitClass()
            Me.column商品名称 = New DataColumn("商品名称", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column商品名称)
            Me.columnパーツ1 = New DataColumn("パーツ1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ1)
            Me.column数量1 = New DataColumn("数量1", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量1)
            Me.columnパーツ2 = New DataColumn("パーツ2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ2)
            Me.column数量2 = New DataColumn("数量2", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量2)
            Me.columnパーツ3 = New DataColumn("パーツ3", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ3)
            Me.column数量3 = New DataColumn("数量3", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量3)
            Me.columnパーツ4 = New DataColumn("パーツ4", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ4)
            Me.column数量4 = New DataColumn("数量4", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量4)
            Me.columnパーツ5 = New DataColumn("パーツ5", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ5)
            Me.column数量5 = New DataColumn("数量5", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量5)
            Me.columnパーツ6 = New DataColumn("パーツ6", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ6)
            Me.column数量6 = New DataColumn("数量6", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量6)
            Me.columnパーツ7 = New DataColumn("パーツ7", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ7)
            Me.column数量7 = New DataColumn("数量7", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量7)
            Me.columnパーツ8 = New DataColumn("パーツ8", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ8)
            Me.column数量8 = New DataColumn("数量8", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量8)
            Me.columnパーツ9 = New DataColumn("パーツ9", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ9)
            Me.column数量9 = New DataColumn("数量9", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量9)
            Me.columnパーツ10 = New DataColumn("パーツ10", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ10)
            Me.column数量10 = New DataColumn("数量10", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量10)
            Me.columnパーツ11 = New DataColumn("パーツ11", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ11)
            Me.column数量11 = New DataColumn("数量11", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量11)
            Me.columnパーツ12 = New DataColumn("パーツ12", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ12)
            Me.column数量12 = New DataColumn("数量12", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量12)
            Me.columnパーツ13 = New DataColumn("パーツ13", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ13)
            Me.column数量13 = New DataColumn("数量13", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量13)
            Me.columnパーツ14 = New DataColumn("パーツ14", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ14)
            Me.column数量14 = New DataColumn("数量14", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量14)
            Me.columnパーツ15 = New DataColumn("パーツ15", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ15)
            Me.column数量15 = New DataColumn("数量15", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量15)
            Me.Constraints.Add(New UniqueConstraint("dsTableKey3", New DataColumn() {Me.column商品名称}, true))
            Me.column商品名称.AllowDBNull = false
            Me.column商品名称.Unique = true
        End Sub
        
        Public Function Newパーツ展開マスタRow() As パーツ展開マスタRow
            Return CType(Me.NewRow,パーツ展開マスタRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New パーツ展開マスタRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(パーツ展開マスタRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.パーツ展開マスタRowChangedEvent) Is Nothing) Then
                RaiseEvent パーツ展開マスタRowChanged(Me, New パーツ展開マスタRowChangeEvent(CType(e.Row,パーツ展開マスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.パーツ展開マスタRowChangingEvent) Is Nothing) Then
                RaiseEvent パーツ展開マスタRowChanging(Me, New パーツ展開マスタRowChangeEvent(CType(e.Row,パーツ展開マスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.パーツ展開マスタRowDeletedEvent) Is Nothing) Then
                RaiseEvent パーツ展開マスタRowDeleted(Me, New パーツ展開マスタRowChangeEvent(CType(e.Row,パーツ展開マスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.パーツ展開マスタRowDeletingEvent) Is Nothing) Then
                RaiseEvent パーツ展開マスタRowDeleting(Me, New パーツ展開マスタRowChangeEvent(CType(e.Row,パーツ展開マスタRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeパーツ展開マスタRow(ByVal row As パーツ展開マスタRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class パーツ展開マスタRow
        Inherits DataRow
        
        Private tableパーツ展開マスタ As パーツ展開マスタDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableパーツ展開マスタ = CType(Me.Table,パーツ展開マスタDataTable)
        End Sub
        
        Public Property 商品名称 As String
            Get
                Return CType(Me(Me.tableパーツ展開マスタ.商品名称Column),String)
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.商品名称Column) = value
            End Set
        End Property
        
        Public Property パーツ1 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ1Column) = value
            End Set
        End Property
        
        Public Property 数量1 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量1Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量1Column) = value
            End Set
        End Property
        
        Public Property パーツ2 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ2Column) = value
            End Set
        End Property
        
        Public Property 数量2 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量2Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量2Column) = value
            End Set
        End Property
        
        Public Property パーツ3 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ3Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ3Column) = value
            End Set
        End Property
        
        Public Property 数量3 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量3Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量3Column) = value
            End Set
        End Property
        
        Public Property パーツ4 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ4Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ4Column) = value
            End Set
        End Property
        
        Public Property 数量4 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量4Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量4Column) = value
            End Set
        End Property
        
        Public Property パーツ5 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ5Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ5Column) = value
            End Set
        End Property
        
        Public Property 数量5 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量5Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量5Column) = value
            End Set
        End Property
        
        Public Property パーツ6 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ6Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ6Column) = value
            End Set
        End Property
        
        Public Property 数量6 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量6Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量6Column) = value
            End Set
        End Property
        
        Public Property パーツ7 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ7Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ7Column) = value
            End Set
        End Property
        
        Public Property 数量7 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量7Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量7Column) = value
            End Set
        End Property
        
        Public Property パーツ8 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ8Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ8Column) = value
            End Set
        End Property
        
        Public Property 数量8 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量8Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量8Column) = value
            End Set
        End Property
        
        Public Property パーツ9 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ9Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ9Column) = value
            End Set
        End Property
        
        Public Property 数量9 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量9Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量9Column) = value
            End Set
        End Property
        
        Public Property パーツ10 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ10Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ10Column) = value
            End Set
        End Property
        
        Public Property 数量10 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量10Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量10Column) = value
            End Set
        End Property
        
        Public Property パーツ11 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ11Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ11Column) = value
            End Set
        End Property
        
        Public Property 数量11 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量11Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量11Column) = value
            End Set
        End Property
        
        Public Property パーツ12 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ12Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ12Column) = value
            End Set
        End Property
        
        Public Property 数量12 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量12Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量12Column) = value
            End Set
        End Property
        
        Public Property パーツ13 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ13Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ13Column) = value
            End Set
        End Property
        
        Public Property 数量13 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量13Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量13Column) = value
            End Set
        End Property
        
        Public Property パーツ14 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ14Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ14Column) = value
            End Set
        End Property
        
        Public Property 数量14 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量14Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量14Column) = value
            End Set
        End Property
        
        Public Property パーツ15 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.パーツ15Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.パーツ15Column) = value
            End Set
        End Property
        
        Public Property 数量15 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ展開マスタ.数量15Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ展開マスタ.数量15Column) = value
            End Set
        End Property
        
        Public Function Isパーツ1Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ1Column)
        End Function
        
        Public Sub Setパーツ1Null()
            Me(Me.tableパーツ展開マスタ.パーツ1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量1Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量1Column)
        End Function
        
        Public Sub Set数量1Null()
            Me(Me.tableパーツ展開マスタ.数量1Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ2Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ2Column)
        End Function
        
        Public Sub Setパーツ2Null()
            Me(Me.tableパーツ展開マスタ.パーツ2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量2Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量2Column)
        End Function
        
        Public Sub Set数量2Null()
            Me(Me.tableパーツ展開マスタ.数量2Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ3Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ3Column)
        End Function
        
        Public Sub Setパーツ3Null()
            Me(Me.tableパーツ展開マスタ.パーツ3Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量3Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量3Column)
        End Function
        
        Public Sub Set数量3Null()
            Me(Me.tableパーツ展開マスタ.数量3Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ4Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ4Column)
        End Function
        
        Public Sub Setパーツ4Null()
            Me(Me.tableパーツ展開マスタ.パーツ4Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量4Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量4Column)
        End Function
        
        Public Sub Set数量4Null()
            Me(Me.tableパーツ展開マスタ.数量4Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ5Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ5Column)
        End Function
        
        Public Sub Setパーツ5Null()
            Me(Me.tableパーツ展開マスタ.パーツ5Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量5Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量5Column)
        End Function
        
        Public Sub Set数量5Null()
            Me(Me.tableパーツ展開マスタ.数量5Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ6Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ6Column)
        End Function
        
        Public Sub Setパーツ6Null()
            Me(Me.tableパーツ展開マスタ.パーツ6Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量6Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量6Column)
        End Function
        
        Public Sub Set数量6Null()
            Me(Me.tableパーツ展開マスタ.数量6Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ7Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ7Column)
        End Function
        
        Public Sub Setパーツ7Null()
            Me(Me.tableパーツ展開マスタ.パーツ7Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量7Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量7Column)
        End Function
        
        Public Sub Set数量7Null()
            Me(Me.tableパーツ展開マスタ.数量7Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ8Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ8Column)
        End Function
        
        Public Sub Setパーツ8Null()
            Me(Me.tableパーツ展開マスタ.パーツ8Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量8Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量8Column)
        End Function
        
        Public Sub Set数量8Null()
            Me(Me.tableパーツ展開マスタ.数量8Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ9Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ9Column)
        End Function
        
        Public Sub Setパーツ9Null()
            Me(Me.tableパーツ展開マスタ.パーツ9Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量9Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量9Column)
        End Function
        
        Public Sub Set数量9Null()
            Me(Me.tableパーツ展開マスタ.数量9Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ10Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ10Column)
        End Function
        
        Public Sub Setパーツ10Null()
            Me(Me.tableパーツ展開マスタ.パーツ10Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量10Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量10Column)
        End Function
        
        Public Sub Set数量10Null()
            Me(Me.tableパーツ展開マスタ.数量10Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ11Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ11Column)
        End Function
        
        Public Sub Setパーツ11Null()
            Me(Me.tableパーツ展開マスタ.パーツ11Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量11Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量11Column)
        End Function
        
        Public Sub Set数量11Null()
            Me(Me.tableパーツ展開マスタ.数量11Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ12Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ12Column)
        End Function
        
        Public Sub Setパーツ12Null()
            Me(Me.tableパーツ展開マスタ.パーツ12Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量12Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量12Column)
        End Function
        
        Public Sub Set数量12Null()
            Me(Me.tableパーツ展開マスタ.数量12Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ13Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ13Column)
        End Function
        
        Public Sub Setパーツ13Null()
            Me(Me.tableパーツ展開マスタ.パーツ13Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量13Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量13Column)
        End Function
        
        Public Sub Set数量13Null()
            Me(Me.tableパーツ展開マスタ.数量13Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ14Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ14Column)
        End Function
        
        Public Sub Setパーツ14Null()
            Me(Me.tableパーツ展開マスタ.パーツ14Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量14Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量14Column)
        End Function
        
        Public Sub Set数量14Null()
            Me(Me.tableパーツ展開マスタ.数量14Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ15Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.パーツ15Column)
        End Function
        
        Public Sub Setパーツ15Null()
            Me(Me.tableパーツ展開マスタ.パーツ15Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量15Null() As Boolean
            Return Me.IsNull(Me.tableパーツ展開マスタ.数量15Column)
        End Function
        
        Public Sub Set数量15Null()
            Me(Me.tableパーツ展開マスタ.数量15Column) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class パーツ展開マスタRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As パーツ展開マスタRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As パーツ展開マスタRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As パーツ展開マスタRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ユーザマスタDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnユーザID As DataColumn
        
        Private columnパスワード As DataColumn
        
        Private columnユーザレベル As DataColumn
        
        Friend Sub New()
            MyBase.New("ユーザマスタ")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property ユーザIDColumn As DataColumn
            Get
                Return Me.columnユーザID
            End Get
        End Property
        
        Friend ReadOnly Property パスワードColumn As DataColumn
            Get
                Return Me.columnパスワード
            End Get
        End Property
        
        Friend ReadOnly Property ユーザレベルColumn As DataColumn
            Get
                Return Me.columnユーザレベル
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As ユーザマスタRow
            Get
                Return CType(Me.Rows(index),ユーザマスタRow)
            End Get
        End Property
        
        Public Event ユーザマスタRowChanged As ユーザマスタRowChangeEventHandler
        
        Public Event ユーザマスタRowChanging As ユーザマスタRowChangeEventHandler
        
        Public Event ユーザマスタRowDeleted As ユーザマスタRowChangeEventHandler
        
        Public Event ユーザマスタRowDeleting As ユーザマスタRowChangeEventHandler
        
        Public Overloads Sub AddユーザマスタRow(ByVal row As ユーザマスタRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddユーザマスタRow(ByVal ユーザID As String, ByVal パスワード As String, ByVal ユーザレベル As String) As ユーザマスタRow
            Dim rowユーザマスタRow As ユーザマスタRow = CType(Me.NewRow,ユーザマスタRow)
            rowユーザマスタRow.ItemArray = New Object() {ユーザID, パスワード, ユーザレベル}
            Me.Rows.Add(rowユーザマスタRow)
            Return rowユーザマスタRow
        End Function
        
        Public Function FindByユーザID(ByVal ユーザID As String) As ユーザマスタRow
            Return CType(Me.Rows.Find(New Object() {ユーザID}),ユーザマスタRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As ユーザマスタDataTable = CType(MyBase.Clone,ユーザマスタDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New ユーザマスタDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnユーザID = Me.Columns("ユーザID")
            Me.columnパスワード = Me.Columns("パスワード")
            Me.columnユーザレベル = Me.Columns("ユーザレベル")
        End Sub
        
        Private Sub InitClass()
            Me.columnユーザID = New DataColumn("ユーザID", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnユーザID)
            Me.columnパスワード = New DataColumn("パスワード", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパスワード)
            Me.columnユーザレベル = New DataColumn("ユーザレベル", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnユーザレベル)
            Me.Constraints.Add(New UniqueConstraint("dsTableKey4", New DataColumn() {Me.columnユーザID}, true))
            Me.columnユーザID.AllowDBNull = false
            Me.columnユーザID.Unique = true
        End Sub
        
        Public Function NewユーザマスタRow() As ユーザマスタRow
            Return CType(Me.NewRow,ユーザマスタRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New ユーザマスタRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(ユーザマスタRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ユーザマスタRowChangedEvent) Is Nothing) Then
                RaiseEvent ユーザマスタRowChanged(Me, New ユーザマスタRowChangeEvent(CType(e.Row,ユーザマスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ユーザマスタRowChangingEvent) Is Nothing) Then
                RaiseEvent ユーザマスタRowChanging(Me, New ユーザマスタRowChangeEvent(CType(e.Row,ユーザマスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ユーザマスタRowDeletedEvent) Is Nothing) Then
                RaiseEvent ユーザマスタRowDeleted(Me, New ユーザマスタRowChangeEvent(CType(e.Row,ユーザマスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ユーザマスタRowDeletingEvent) Is Nothing) Then
                RaiseEvent ユーザマスタRowDeleting(Me, New ユーザマスタRowChangeEvent(CType(e.Row,ユーザマスタRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveユーザマスタRow(ByVal row As ユーザマスタRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ユーザマスタRow
        Inherits DataRow
        
        Private tableユーザマスタ As ユーザマスタDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableユーザマスタ = CType(Me.Table,ユーザマスタDataTable)
        End Sub
        
        Public Property ユーザID As String
            Get
                Return CType(Me(Me.tableユーザマスタ.ユーザIDColumn),String)
            End Get
            Set
                Me(Me.tableユーザマスタ.ユーザIDColumn) = value
            End Set
        End Property
        
        Public Property パスワード As String
            Get
                Try 
                    Return CType(Me(Me.tableユーザマスタ.パスワードColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableユーザマスタ.パスワードColumn) = value
            End Set
        End Property
        
        Public Property ユーザレベル As String
            Get
                Try 
                    Return CType(Me(Me.tableユーザマスタ.ユーザレベルColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableユーザマスタ.ユーザレベルColumn) = value
            End Set
        End Property
        
        Public Function IsパスワードNull() As Boolean
            Return Me.IsNull(Me.tableユーザマスタ.パスワードColumn)
        End Function
        
        Public Sub SetパスワードNull()
            Me(Me.tableユーザマスタ.パスワードColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsユーザレベルNull() As Boolean
            Return Me.IsNull(Me.tableユーザマスタ.ユーザレベルColumn)
        End Function
        
        Public Sub SetユーザレベルNull()
            Me(Me.tableユーザマスタ.ユーザレベルColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ユーザマスタRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As ユーザマスタRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As ユーザマスタRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As ユーザマスタRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class 顧客マスタDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private column並び順 As DataColumn
        
        Private column顧客コード As DataColumn
        
        Private column顧客名 As DataColumn
        
        Friend Sub New()
            MyBase.New("顧客マスタ")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property 並び順Column As DataColumn
            Get
                Return Me.column並び順
            End Get
        End Property
        
        Friend ReadOnly Property 顧客コードColumn As DataColumn
            Get
                Return Me.column顧客コード
            End Get
        End Property
        
        Friend ReadOnly Property 顧客名Column As DataColumn
            Get
                Return Me.column顧客名
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As 顧客マスタRow
            Get
                Return CType(Me.Rows(index),顧客マスタRow)
            End Get
        End Property
        
        Public Event 顧客マスタRowChanged As 顧客マスタRowChangeEventHandler
        
        Public Event 顧客マスタRowChanging As 顧客マスタRowChangeEventHandler
        
        Public Event 顧客マスタRowDeleted As 顧客マスタRowChangeEventHandler
        
        Public Event 顧客マスタRowDeleting As 顧客マスタRowChangeEventHandler
        
        Public Overloads Sub Add顧客マスタRow(ByVal row As 顧客マスタRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Add顧客マスタRow(ByVal 並び順 As Integer, ByVal 顧客コード As String, ByVal 顧客名 As String) As 顧客マスタRow
            Dim row顧客マスタRow As 顧客マスタRow = CType(Me.NewRow,顧客マスタRow)
            row顧客マスタRow.ItemArray = New Object() {並び順, 顧客コード, 顧客名}
            Me.Rows.Add(row顧客マスタRow)
            Return row顧客マスタRow
        End Function
        
        Public Function FindBy顧客コード(ByVal 顧客コード As String) As 顧客マスタRow
            Return CType(Me.Rows.Find(New Object() {顧客コード}),顧客マスタRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As 顧客マスタDataTable = CType(MyBase.Clone,顧客マスタDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New 顧客マスタDataTable
        End Function
        
        Friend Sub InitVars()
            Me.column並び順 = Me.Columns("並び順")
            Me.column顧客コード = Me.Columns("顧客コード")
            Me.column顧客名 = Me.Columns("顧客名")
        End Sub
        
        Private Sub InitClass()
            Me.column並び順 = New DataColumn("並び順", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column並び順)
            Me.column顧客コード = New DataColumn("顧客コード", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column顧客コード)
            Me.column顧客名 = New DataColumn("顧客名", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column顧客名)
            Me.Constraints.Add(New UniqueConstraint("dsTableKey5", New DataColumn() {Me.column顧客コード}, true))
            Me.column顧客コード.AllowDBNull = false
            Me.column顧客コード.Unique = true
        End Sub
        
        Public Function New顧客マスタRow() As 顧客マスタRow
            Return CType(Me.NewRow,顧客マスタRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New 顧客マスタRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(顧客マスタRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.顧客マスタRowChangedEvent) Is Nothing) Then
                RaiseEvent 顧客マスタRowChanged(Me, New 顧客マスタRowChangeEvent(CType(e.Row,顧客マスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.顧客マスタRowChangingEvent) Is Nothing) Then
                RaiseEvent 顧客マスタRowChanging(Me, New 顧客マスタRowChangeEvent(CType(e.Row,顧客マスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.顧客マスタRowDeletedEvent) Is Nothing) Then
                RaiseEvent 顧客マスタRowDeleted(Me, New 顧客マスタRowChangeEvent(CType(e.Row,顧客マスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.顧客マスタRowDeletingEvent) Is Nothing) Then
                RaiseEvent 顧客マスタRowDeleting(Me, New 顧客マスタRowChangeEvent(CType(e.Row,顧客マスタRow), e.Action))
            End If
        End Sub
        
        Public Sub Remove顧客マスタRow(ByVal row As 顧客マスタRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class 顧客マスタRow
        Inherits DataRow
        
        Private table顧客マスタ As 顧客マスタDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.table顧客マスタ = CType(Me.Table,顧客マスタDataTable)
        End Sub
        
        Public Property 並び順 As Integer
            Get
                Try 
                    Return CType(Me(Me.table顧客マスタ.並び順Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table顧客マスタ.並び順Column) = value
            End Set
        End Property
        
        Public Property 顧客コード As String
            Get
                Return CType(Me(Me.table顧客マスタ.顧客コードColumn),String)
            End Get
            Set
                Me(Me.table顧客マスタ.顧客コードColumn) = value
            End Set
        End Property
        
        Public Property 顧客名 As String
            Get
                Try 
                    Return CType(Me(Me.table顧客マスタ.顧客名Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table顧客マスタ.顧客名Column) = value
            End Set
        End Property
        
        Public Function Is並び順Null() As Boolean
            Return Me.IsNull(Me.table顧客マスタ.並び順Column)
        End Function
        
        Public Sub Set並び順Null()
            Me(Me.table顧客マスタ.並び順Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is顧客名Null() As Boolean
            Return Me.IsNull(Me.table顧客マスタ.顧客名Column)
        End Function
        
        Public Sub Set顧客名Null()
            Me(Me.table顧客マスタ.顧客名Column) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class 顧客マスタRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As 顧客マスタRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As 顧客マスタRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As 顧客マスタRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class 在庫変更履歴DataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private column通し番号 As DataColumn
        
        Private columnパーツ名称 As DataColumn
        
        Private column処理日時 As DataColumn
        
        Private column入出庫区分 As DataColumn
        
        Private column数量 As DataColumn
        
        Friend Sub New()
            MyBase.New("在庫変更履歴")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property 通し番号Column As DataColumn
            Get
                Return Me.column通し番号
            End Get
        End Property
        
        Friend ReadOnly Property パーツ名称Column As DataColumn
            Get
                Return Me.columnパーツ名称
            End Get
        End Property
        
        Friend ReadOnly Property 処理日時Column As DataColumn
            Get
                Return Me.column処理日時
            End Get
        End Property
        
        Friend ReadOnly Property 入出庫区分Column As DataColumn
            Get
                Return Me.column入出庫区分
            End Get
        End Property
        
        Friend ReadOnly Property 数量Column As DataColumn
            Get
                Return Me.column数量
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As 在庫変更履歴Row
            Get
                Return CType(Me.Rows(index),在庫変更履歴Row)
            End Get
        End Property
        
        Public Event 在庫変更履歴RowChanged As 在庫変更履歴RowChangeEventHandler
        
        Public Event 在庫変更履歴RowChanging As 在庫変更履歴RowChangeEventHandler
        
        Public Event 在庫変更履歴RowDeleted As 在庫変更履歴RowChangeEventHandler
        
        Public Event 在庫変更履歴RowDeleting As 在庫変更履歴RowChangeEventHandler
        
        Public Overloads Sub Add在庫変更履歴Row(ByVal row As 在庫変更履歴Row)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Add在庫変更履歴Row(ByVal パーツ名称 As String, ByVal 処理日時 As Date, ByVal 入出庫区分 As String, ByVal 数量 As Integer) As 在庫変更履歴Row
            Dim row在庫変更履歴Row As 在庫変更履歴Row = CType(Me.NewRow,在庫変更履歴Row)
            row在庫変更履歴Row.ItemArray = New Object() {Nothing, パーツ名称, 処理日時, 入出庫区分, 数量}
            Me.Rows.Add(row在庫変更履歴Row)
            Return row在庫変更履歴Row
        End Function
        
        Public Function FindBy通し番号(ByVal 通し番号 As Integer) As 在庫変更履歴Row
            Return CType(Me.Rows.Find(New Object() {通し番号}),在庫変更履歴Row)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As 在庫変更履歴DataTable = CType(MyBase.Clone,在庫変更履歴DataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New 在庫変更履歴DataTable
        End Function
        
        Friend Sub InitVars()
            Me.column通し番号 = Me.Columns("通し番号")
            Me.columnパーツ名称 = Me.Columns("パーツ名称")
            Me.column処理日時 = Me.Columns("処理日時")
            Me.column入出庫区分 = Me.Columns("入出庫区分")
            Me.column数量 = Me.Columns("数量")
        End Sub
        
        Private Sub InitClass()
            Me.column通し番号 = New DataColumn("通し番号", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column通し番号)
            Me.columnパーツ名称 = New DataColumn("パーツ名称", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ名称)
            Me.column処理日時 = New DataColumn("処理日時", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column処理日時)
            Me.column入出庫区分 = New DataColumn("入出庫区分", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column入出庫区分)
            Me.column数量 = New DataColumn("数量", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column数量)
            Me.Constraints.Add(New UniqueConstraint("dsTableKey6", New DataColumn() {Me.column通し番号}, true))
            Me.column通し番号.AutoIncrement = true
            Me.column通し番号.AllowDBNull = false
            Me.column通し番号.Unique = true
        End Sub
        
        Public Function New在庫変更履歴Row() As 在庫変更履歴Row
            Return CType(Me.NewRow,在庫変更履歴Row)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New 在庫変更履歴Row(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(在庫変更履歴Row)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.在庫変更履歴RowChangedEvent) Is Nothing) Then
                RaiseEvent 在庫変更履歴RowChanged(Me, New 在庫変更履歴RowChangeEvent(CType(e.Row,在庫変更履歴Row), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.在庫変更履歴RowChangingEvent) Is Nothing) Then
                RaiseEvent 在庫変更履歴RowChanging(Me, New 在庫変更履歴RowChangeEvent(CType(e.Row,在庫変更履歴Row), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.在庫変更履歴RowDeletedEvent) Is Nothing) Then
                RaiseEvent 在庫変更履歴RowDeleted(Me, New 在庫変更履歴RowChangeEvent(CType(e.Row,在庫変更履歴Row), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.在庫変更履歴RowDeletingEvent) Is Nothing) Then
                RaiseEvent 在庫変更履歴RowDeleting(Me, New 在庫変更履歴RowChangeEvent(CType(e.Row,在庫変更履歴Row), e.Action))
            End If
        End Sub
        
        Public Sub Remove在庫変更履歴Row(ByVal row As 在庫変更履歴Row)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class 在庫変更履歴Row
        Inherits DataRow
        
        Private table在庫変更履歴 As 在庫変更履歴DataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.table在庫変更履歴 = CType(Me.Table,在庫変更履歴DataTable)
        End Sub
        
        Public Property 通し番号 As Integer
            Get
                Return CType(Me(Me.table在庫変更履歴.通し番号Column),Integer)
            End Get
            Set
                Me(Me.table在庫変更履歴.通し番号Column) = value
            End Set
        End Property
        
        Public Property パーツ名称 As String
            Get
                Try 
                    Return CType(Me(Me.table在庫変更履歴.パーツ名称Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table在庫変更履歴.パーツ名称Column) = value
            End Set
        End Property
        
        Public Property 処理日時 As Date
            Get
                Try 
                    Return CType(Me(Me.table在庫変更履歴.処理日時Column),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table在庫変更履歴.処理日時Column) = value
            End Set
        End Property
        
        Public Property 入出庫区分 As String
            Get
                Try 
                    Return CType(Me(Me.table在庫変更履歴.入出庫区分Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table在庫変更履歴.入出庫区分Column) = value
            End Set
        End Property
        
        Public Property 数量 As Integer
            Get
                Try 
                    Return CType(Me(Me.table在庫変更履歴.数量Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table在庫変更履歴.数量Column) = value
            End Set
        End Property
        
        Public Function Isパーツ名称Null() As Boolean
            Return Me.IsNull(Me.table在庫変更履歴.パーツ名称Column)
        End Function
        
        Public Sub Setパーツ名称Null()
            Me(Me.table在庫変更履歴.パーツ名称Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is処理日時Null() As Boolean
            Return Me.IsNull(Me.table在庫変更履歴.処理日時Column)
        End Function
        
        Public Sub Set処理日時Null()
            Me(Me.table在庫変更履歴.処理日時Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is入出庫区分Null() As Boolean
            Return Me.IsNull(Me.table在庫変更履歴.入出庫区分Column)
        End Function
        
        Public Sub Set入出庫区分Null()
            Me(Me.table在庫変更履歴.入出庫区分Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is数量Null() As Boolean
            Return Me.IsNull(Me.table在庫変更履歴.数量Column)
        End Function
        
        Public Sub Set数量Null()
            Me(Me.table在庫変更履歴.数量Column) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class 在庫変更履歴RowChangeEvent
        Inherits EventArgs
        
        Private eventRow As 在庫変更履歴Row
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As 在庫変更履歴Row, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As 在庫変更履歴Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class パーツ在庫マスタDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnパーツ名称 As DataColumn
        
        Private column製造区分 As DataColumn
        
        Private columnパーツ種別 As DataColumn
        
        Private column現在庫数 As DataColumn
        
        Private column発注点警告日 As DataColumn
        
        Private column発注点数量 As DataColumn
        
        Private column備考 As DataColumn
        
        Private column欠品になった日 As DataColumn
        
        Private column棚卸した日 As DataColumn
        
        Friend Sub New()
            MyBase.New("パーツ在庫マスタ")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property パーツ名称Column As DataColumn
            Get
                Return Me.columnパーツ名称
            End Get
        End Property
        
        Friend ReadOnly Property 製造区分Column As DataColumn
            Get
                Return Me.column製造区分
            End Get
        End Property
        
        Friend ReadOnly Property パーツ種別Column As DataColumn
            Get
                Return Me.columnパーツ種別
            End Get
        End Property
        
        Friend ReadOnly Property 現在庫数Column As DataColumn
            Get
                Return Me.column現在庫数
            End Get
        End Property
        
        Friend ReadOnly Property 発注点警告日Column As DataColumn
            Get
                Return Me.column発注点警告日
            End Get
        End Property
        
        Friend ReadOnly Property 発注点数量Column As DataColumn
            Get
                Return Me.column発注点数量
            End Get
        End Property
        
        Friend ReadOnly Property 備考Column As DataColumn
            Get
                Return Me.column備考
            End Get
        End Property
        
        Friend ReadOnly Property 欠品になった日Column As DataColumn
            Get
                Return Me.column欠品になった日
            End Get
        End Property
        
        Friend ReadOnly Property 棚卸した日Column As DataColumn
            Get
                Return Me.column棚卸した日
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As パーツ在庫マスタRow
            Get
                Return CType(Me.Rows(index),パーツ在庫マスタRow)
            End Get
        End Property
        
        Public Event パーツ在庫マスタRowChanged As パーツ在庫マスタRowChangeEventHandler
        
        Public Event パーツ在庫マスタRowChanging As パーツ在庫マスタRowChangeEventHandler
        
        Public Event パーツ在庫マスタRowDeleted As パーツ在庫マスタRowChangeEventHandler
        
        Public Event パーツ在庫マスタRowDeleting As パーツ在庫マスタRowChangeEventHandler
        
        Public Overloads Sub Addパーツ在庫マスタRow(ByVal row As パーツ在庫マスタRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addパーツ在庫マスタRow(ByVal パーツ名称 As String, ByVal 製造区分 As String, ByVal パーツ種別 As String, ByVal 現在庫数 As Integer, ByVal 発注点警告日 As Date, ByVal 発注点数量 As Integer, ByVal 備考 As String, ByVal 欠品になった日 As Date, ByVal 棚卸した日 As Date) As パーツ在庫マスタRow
            Dim rowパーツ在庫マスタRow As パーツ在庫マスタRow = CType(Me.NewRow,パーツ在庫マスタRow)
            rowパーツ在庫マスタRow.ItemArray = New Object() {パーツ名称, 製造区分, パーツ種別, 現在庫数, 発注点警告日, 発注点数量, 備考, 欠品になった日, 棚卸した日}
            Me.Rows.Add(rowパーツ在庫マスタRow)
            Return rowパーツ在庫マスタRow
        End Function
        
        Public Function FindByパーツ名称(ByVal パーツ名称 As String) As パーツ在庫マスタRow
            Return CType(Me.Rows.Find(New Object() {パーツ名称}),パーツ在庫マスタRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As パーツ在庫マスタDataTable = CType(MyBase.Clone,パーツ在庫マスタDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New パーツ在庫マスタDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnパーツ名称 = Me.Columns("パーツ名称")
            Me.column製造区分 = Me.Columns("製造区分")
            Me.columnパーツ種別 = Me.Columns("パーツ種別")
            Me.column現在庫数 = Me.Columns("現在庫数")
            Me.column発注点警告日 = Me.Columns("発注点警告日")
            Me.column発注点数量 = Me.Columns("発注点数量")
            Me.column備考 = Me.Columns("備考")
            Me.column欠品になった日 = Me.Columns("欠品になった日")
            Me.column棚卸した日 = Me.Columns("棚卸した日")
        End Sub
        
        Private Sub InitClass()
            Me.columnパーツ名称 = New DataColumn("パーツ名称", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ名称)
            Me.column製造区分 = New DataColumn("製造区分", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column製造区分)
            Me.columnパーツ種別 = New DataColumn("パーツ種別", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnパーツ種別)
            Me.column現在庫数 = New DataColumn("現在庫数", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column現在庫数)
            Me.column発注点警告日 = New DataColumn("発注点警告日", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column発注点警告日)
            Me.column発注点数量 = New DataColumn("発注点数量", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column発注点数量)
            Me.column備考 = New DataColumn("備考", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column備考)
            Me.column欠品になった日 = New DataColumn("欠品になった日", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column欠品になった日)
            Me.column棚卸した日 = New DataColumn("棚卸した日", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column棚卸した日)
            Me.Constraints.Add(New UniqueConstraint("dsTableKey1", New DataColumn() {Me.columnパーツ名称}, true))
            Me.columnパーツ名称.AllowDBNull = false
            Me.columnパーツ名称.Unique = true
            Me.column現在庫数.DefaultValue = 0
        End Sub
        
        Public Function Newパーツ在庫マスタRow() As パーツ在庫マスタRow
            Return CType(Me.NewRow,パーツ在庫マスタRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New パーツ在庫マスタRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(パーツ在庫マスタRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.パーツ在庫マスタRowChangedEvent) Is Nothing) Then
                RaiseEvent パーツ在庫マスタRowChanged(Me, New パーツ在庫マスタRowChangeEvent(CType(e.Row,パーツ在庫マスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.パーツ在庫マスタRowChangingEvent) Is Nothing) Then
                RaiseEvent パーツ在庫マスタRowChanging(Me, New パーツ在庫マスタRowChangeEvent(CType(e.Row,パーツ在庫マスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.パーツ在庫マスタRowDeletedEvent) Is Nothing) Then
                RaiseEvent パーツ在庫マスタRowDeleted(Me, New パーツ在庫マスタRowChangeEvent(CType(e.Row,パーツ在庫マスタRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.パーツ在庫マスタRowDeletingEvent) Is Nothing) Then
                RaiseEvent パーツ在庫マスタRowDeleting(Me, New パーツ在庫マスタRowChangeEvent(CType(e.Row,パーツ在庫マスタRow), e.Action))
            End If
        End Sub
        
        Public Sub Removeパーツ在庫マスタRow(ByVal row As パーツ在庫マスタRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class パーツ在庫マスタRow
        Inherits DataRow
        
        Private tableパーツ在庫マスタ As パーツ在庫マスタDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableパーツ在庫マスタ = CType(Me.Table,パーツ在庫マスタDataTable)
        End Sub
        
        Public Property パーツ名称 As String
            Get
                Return CType(Me(Me.tableパーツ在庫マスタ.パーツ名称Column),String)
            End Get
            Set
                Me(Me.tableパーツ在庫マスタ.パーツ名称Column) = value
            End Set
        End Property
        
        Public Property 製造区分 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ在庫マスタ.製造区分Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ在庫マスタ.製造区分Column) = value
            End Set
        End Property
        
        Public Property パーツ種別 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ在庫マスタ.パーツ種別Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ在庫マスタ.パーツ種別Column) = value
            End Set
        End Property
        
        Public Property 現在庫数 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ在庫マスタ.現在庫数Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ在庫マスタ.現在庫数Column) = value
            End Set
        End Property
        
        Public Property 発注点警告日 As Date
            Get
                Try 
                    Return CType(Me(Me.tableパーツ在庫マスタ.発注点警告日Column),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ在庫マスタ.発注点警告日Column) = value
            End Set
        End Property
        
        Public Property 発注点数量 As Integer
            Get
                Try 
                    Return CType(Me(Me.tableパーツ在庫マスタ.発注点数量Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ在庫マスタ.発注点数量Column) = value
            End Set
        End Property
        
        Public Property 備考 As String
            Get
                Try 
                    Return CType(Me(Me.tableパーツ在庫マスタ.備考Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ在庫マスタ.備考Column) = value
            End Set
        End Property
        
        Public Property 欠品になった日 As Date
            Get
                Try 
                    Return CType(Me(Me.tableパーツ在庫マスタ.欠品になった日Column),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ在庫マスタ.欠品になった日Column) = value
            End Set
        End Property
        
        Public Property 棚卸した日 As Date
            Get
                Try 
                    Return CType(Me(Me.tableパーツ在庫マスタ.棚卸した日Column),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.tableパーツ在庫マスタ.棚卸した日Column) = value
            End Set
        End Property
        
        Public Function Is製造区分Null() As Boolean
            Return Me.IsNull(Me.tableパーツ在庫マスタ.製造区分Column)
        End Function
        
        Public Sub Set製造区分Null()
            Me(Me.tableパーツ在庫マスタ.製造区分Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isパーツ種別Null() As Boolean
            Return Me.IsNull(Me.tableパーツ在庫マスタ.パーツ種別Column)
        End Function
        
        Public Sub Setパーツ種別Null()
            Me(Me.tableパーツ在庫マスタ.パーツ種別Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is現在庫数Null() As Boolean
            Return Me.IsNull(Me.tableパーツ在庫マスタ.現在庫数Column)
        End Function
        
        Public Sub Set現在庫数Null()
            Me(Me.tableパーツ在庫マスタ.現在庫数Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is発注点警告日Null() As Boolean
            Return Me.IsNull(Me.tableパーツ在庫マスタ.発注点警告日Column)
        End Function
        
        Public Sub Set発注点警告日Null()
            Me(Me.tableパーツ在庫マスタ.発注点警告日Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is発注点数量Null() As Boolean
            Return Me.IsNull(Me.tableパーツ在庫マスタ.発注点数量Column)
        End Function
        
        Public Sub Set発注点数量Null()
            Me(Me.tableパーツ在庫マスタ.発注点数量Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is備考Null() As Boolean
            Return Me.IsNull(Me.tableパーツ在庫マスタ.備考Column)
        End Function
        
        Public Sub Set備考Null()
            Me(Me.tableパーツ在庫マスタ.備考Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is欠品になった日Null() As Boolean
            Return Me.IsNull(Me.tableパーツ在庫マスタ.欠品になった日Column)
        End Function
        
        Public Sub Set欠品になった日Null()
            Me(Me.tableパーツ在庫マスタ.欠品になった日Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is棚卸した日Null() As Boolean
            Return Me.IsNull(Me.tableパーツ在庫マスタ.棚卸した日Column)
        End Function
        
        Public Sub Set棚卸した日Null()
            Me(Me.tableパーツ在庫マスタ.棚卸した日Column) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class パーツ在庫マスタRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As パーツ在庫マスタRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As パーツ在庫マスタRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As パーツ在庫マスタRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class 受注データDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private column顧客コード As DataColumn
        
        Private column受注番号 As DataColumn
        
        Private column受注日 As DataColumn
        
        Private column納期 As DataColumn
        
        Private column商品名称 As DataColumn
        
        Private column受注数量 As DataColumn
        
        Private column在庫引落日時 As DataColumn
        
        Private column在庫引当処理番号 As DataColumn
        
        Private column標準商品名称 As DataColumn
        
        Private columnピッキングリスト出力 As DataColumn
        
        Friend Sub New()
            MyBase.New("受注データ")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property 顧客コードColumn As DataColumn
            Get
                Return Me.column顧客コード
            End Get
        End Property
        
        Friend ReadOnly Property 受注番号Column As DataColumn
            Get
                Return Me.column受注番号
            End Get
        End Property
        
        Friend ReadOnly Property 受注日Column As DataColumn
            Get
                Return Me.column受注日
            End Get
        End Property
        
        Friend ReadOnly Property 納期Column As DataColumn
            Get
                Return Me.column納期
            End Get
        End Property
        
        Friend ReadOnly Property 商品名称Column As DataColumn
            Get
                Return Me.column商品名称
            End Get
        End Property
        
        Friend ReadOnly Property 受注数量Column As DataColumn
            Get
                Return Me.column受注数量
            End Get
        End Property
        
        Friend ReadOnly Property 在庫引落日時Column As DataColumn
            Get
                Return Me.column在庫引落日時
            End Get
        End Property
        
        Friend ReadOnly Property 在庫引当処理番号Column As DataColumn
            Get
                Return Me.column在庫引当処理番号
            End Get
        End Property
        
        Friend ReadOnly Property 標準商品名称Column As DataColumn
            Get
                Return Me.column標準商品名称
            End Get
        End Property
        
        Friend ReadOnly Property ピッキングリスト出力Column As DataColumn
            Get
                Return Me.columnピッキングリスト出力
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As 受注データRow
            Get
                Return CType(Me.Rows(index),受注データRow)
            End Get
        End Property
        
        Public Event 受注データRowChanged As 受注データRowChangeEventHandler
        
        Public Event 受注データRowChanging As 受注データRowChangeEventHandler
        
        Public Event 受注データRowDeleted As 受注データRowChangeEventHandler
        
        Public Event 受注データRowDeleting As 受注データRowChangeEventHandler
        
        Public Overloads Sub Add受注データRow(ByVal row As 受注データRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Add受注データRow(ByVal 顧客コード As String, ByVal 受注番号 As String, ByVal 受注日 As Date, ByVal 納期 As Date, ByVal 商品名称 As String, ByVal 受注数量 As Integer, ByVal 在庫引落日時 As Date, ByVal 在庫引当処理番号 As Integer, ByVal 標準商品名称 As String, ByVal ピッキングリスト出力 As Boolean) As 受注データRow
            Dim row受注データRow As 受注データRow = CType(Me.NewRow,受注データRow)
            row受注データRow.ItemArray = New Object() {顧客コード, 受注番号, 受注日, 納期, 商品名称, 受注数量, 在庫引落日時, 在庫引当処理番号, 標準商品名称, ピッキングリスト出力}
            Me.Rows.Add(row受注データRow)
            Return row受注データRow
        End Function
        
        Public Function FindBy顧客コード受注番号(ByVal 顧客コード As String, ByVal 受注番号 As String) As 受注データRow
            Return CType(Me.Rows.Find(New Object() {顧客コード, 受注番号}),受注データRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As 受注データDataTable = CType(MyBase.Clone,受注データDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New 受注データDataTable
        End Function
        
        Friend Sub InitVars()
            Me.column顧客コード = Me.Columns("顧客コード")
            Me.column受注番号 = Me.Columns("受注番号")
            Me.column受注日 = Me.Columns("受注日")
            Me.column納期 = Me.Columns("納期")
            Me.column商品名称 = Me.Columns("商品名称")
            Me.column受注数量 = Me.Columns("受注数量")
            Me.column在庫引落日時 = Me.Columns("在庫引落日時")
            Me.column在庫引当処理番号 = Me.Columns("在庫引当処理番号")
            Me.column標準商品名称 = Me.Columns("標準商品名称")
            Me.columnピッキングリスト出力 = Me.Columns("ピッキングリスト出力")
        End Sub
        
        Private Sub InitClass()
            Me.column顧客コード = New DataColumn("顧客コード", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column顧客コード)
            Me.column受注番号 = New DataColumn("受注番号", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column受注番号)
            Me.column受注日 = New DataColumn("受注日", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column受注日)
            Me.column納期 = New DataColumn("納期", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column納期)
            Me.column商品名称 = New DataColumn("商品名称", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column商品名称)
            Me.column受注数量 = New DataColumn("受注数量", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column受注数量)
            Me.column在庫引落日時 = New DataColumn("在庫引落日時", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column在庫引落日時)
            Me.column在庫引当処理番号 = New DataColumn("在庫引当処理番号", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column在庫引当処理番号)
            Me.column標準商品名称 = New DataColumn("標準商品名称", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.column標準商品名称)
            Me.columnピッキングリスト出力 = New DataColumn("ピッキングリスト出力", GetType(System.Boolean), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnピッキングリスト出力)
            Me.Constraints.Add(New UniqueConstraint("dsTableKey7", New DataColumn() {Me.column顧客コード, Me.column受注番号}, true))
            Me.column顧客コード.AllowDBNull = false
            Me.column受注番号.AllowDBNull = false
        End Sub
        
        Public Function New受注データRow() As 受注データRow
            Return CType(Me.NewRow,受注データRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New 受注データRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(受注データRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.受注データRowChangedEvent) Is Nothing) Then
                RaiseEvent 受注データRowChanged(Me, New 受注データRowChangeEvent(CType(e.Row,受注データRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.受注データRowChangingEvent) Is Nothing) Then
                RaiseEvent 受注データRowChanging(Me, New 受注データRowChangeEvent(CType(e.Row,受注データRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.受注データRowDeletedEvent) Is Nothing) Then
                RaiseEvent 受注データRowDeleted(Me, New 受注データRowChangeEvent(CType(e.Row,受注データRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.受注データRowDeletingEvent) Is Nothing) Then
                RaiseEvent 受注データRowDeleting(Me, New 受注データRowChangeEvent(CType(e.Row,受注データRow), e.Action))
            End If
        End Sub
        
        Public Sub Remove受注データRow(ByVal row As 受注データRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class 受注データRow
        Inherits DataRow
        
        Private table受注データ As 受注データDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.table受注データ = CType(Me.Table,受注データDataTable)
        End Sub
        
        Public Property 顧客コード As String
            Get
                Return CType(Me(Me.table受注データ.顧客コードColumn),String)
            End Get
            Set
                Me(Me.table受注データ.顧客コードColumn) = value
            End Set
        End Property
        
        Public Property 受注番号 As String
            Get
                Return CType(Me(Me.table受注データ.受注番号Column),String)
            End Get
            Set
                Me(Me.table受注データ.受注番号Column) = value
            End Set
        End Property
        
        Public Property 受注日 As Date
            Get
                Try 
                    Return CType(Me(Me.table受注データ.受注日Column),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table受注データ.受注日Column) = value
            End Set
        End Property
        
        Public Property 納期 As Date
            Get
                Try 
                    Return CType(Me(Me.table受注データ.納期Column),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table受注データ.納期Column) = value
            End Set
        End Property
        
        Public Property 商品名称 As String
            Get
                Try 
                    Return CType(Me(Me.table受注データ.商品名称Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table受注データ.商品名称Column) = value
            End Set
        End Property
        
        Public Property 受注数量 As Integer
            Get
                Try 
                    Return CType(Me(Me.table受注データ.受注数量Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table受注データ.受注数量Column) = value
            End Set
        End Property
        
        Public Property 在庫引落日時 As Date
            Get
                Try 
                    Return CType(Me(Me.table受注データ.在庫引落日時Column),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table受注データ.在庫引落日時Column) = value
            End Set
        End Property
        
        Public Property 在庫引当処理番号 As Integer
            Get
                Try 
                    Return CType(Me(Me.table受注データ.在庫引当処理番号Column),Integer)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table受注データ.在庫引当処理番号Column) = value
            End Set
        End Property
        
        Public Property 標準商品名称 As String
            Get
                Try 
                    Return CType(Me(Me.table受注データ.標準商品名称Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table受注データ.標準商品名称Column) = value
            End Set
        End Property
        
        Public Property ピッキングリスト出力 As Boolean
            Get
                Try 
                    Return CType(Me(Me.table受注データ.ピッキングリスト出力Column),Boolean)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("値は DBNull であるため、取得できません。", e)
                End Try
            End Get
            Set
                Me(Me.table受注データ.ピッキングリスト出力Column) = value
            End Set
        End Property
        
        Public Function Is受注日Null() As Boolean
            Return Me.IsNull(Me.table受注データ.受注日Column)
        End Function
        
        Public Sub Set受注日Null()
            Me(Me.table受注データ.受注日Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is納期Null() As Boolean
            Return Me.IsNull(Me.table受注データ.納期Column)
        End Function
        
        Public Sub Set納期Null()
            Me(Me.table受注データ.納期Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is商品名称Null() As Boolean
            Return Me.IsNull(Me.table受注データ.商品名称Column)
        End Function
        
        Public Sub Set商品名称Null()
            Me(Me.table受注データ.商品名称Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is受注数量Null() As Boolean
            Return Me.IsNull(Me.table受注データ.受注数量Column)
        End Function
        
        Public Sub Set受注数量Null()
            Me(Me.table受注データ.受注数量Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is在庫引落日時Null() As Boolean
            Return Me.IsNull(Me.table受注データ.在庫引落日時Column)
        End Function
        
        Public Sub Set在庫引落日時Null()
            Me(Me.table受注データ.在庫引落日時Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is在庫引当処理番号Null() As Boolean
            Return Me.IsNull(Me.table受注データ.在庫引当処理番号Column)
        End Function
        
        Public Sub Set在庫引当処理番号Null()
            Me(Me.table受注データ.在庫引当処理番号Column) = System.Convert.DBNull
        End Sub
        
        Public Function Is標準商品名称Null() As Boolean
            Return Me.IsNull(Me.table受注データ.標準商品名称Column)
        End Function
        
        Public Sub Set標準商品名称Null()
            Me(Me.table受注データ.標準商品名称Column) = System.Convert.DBNull
        End Sub
        
        Public Function Isピッキングリスト出力Null() As Boolean
            Return Me.IsNull(Me.table受注データ.ピッキングリスト出力Column)
        End Function
        
        Public Sub Setピッキングリスト出力Null()
            Me(Me.table受注データ.ピッキングリスト出力Column) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class 受注データRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As 受注データRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As 受注データRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As 受注データRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
