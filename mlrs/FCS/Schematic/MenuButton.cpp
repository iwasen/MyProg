//*****************************************************************************************************
//  1. ファイル名
//		MenuButton.cpp
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		操作メニューのボタンコントロールクラス
//----------------------------------------------------------------------------------------------------
//  3. 備考
//*****************************************************************************************************

#include "stdafx.h"
#include "Schematic.h"
#include "MenuButton.h"


// CMenuButton

IMPLEMENT_DYNAMIC(CMenuButton, CButton)

BEGIN_MESSAGE_MAP(CMenuButton, CButton)
	ON_MESSAGE(BM_SETSTATE, OnSetState)
END_MESSAGE_MAP()


// CMenuButton メッセージ ハンドラ

//*****************************************************************************************************
//  1. 関数名
//		CMenuButton::operator=
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		チェック状態設定
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		BOOL	param		[I] セットするチェック状態（TRUE:チェック状態，FALSE：非チェック状態）
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		BOOL	設定したチェック状態
//*****************************************************************************************************
BOOL CMenuButton::operator=(BOOL param)
{
	if (GetCheck() != param)
		SetCheck(param);

	return param;
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuButton::operator BOOL
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		チェック状態取得
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		BOOL	取得したチェック状態
//*****************************************************************************************************
CMenuButton::operator BOOL()
{
	return GetCheck();
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuButton::operator=
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		ボタンのテキスト設定
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		LPCTSTR		pText		[I] セットするテキスト
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		BOOL	設定したテキストへのポインタ
//*****************************************************************************************************
LPCTSTR CMenuButton::operator=(LPCTSTR pText)
{
	SetWindowText(pText);
	return pText;
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuButton::SetEnable
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		ボタンの有効/無効状態設定
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		BOOL	bEnable		[I] 有効/無効状態（TRUE：有効，FALSE：無効）
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuButton::SetEnable(BOOL bEnable)
{
	if (!bEnable) {
		if ((GetButtonStyle() == BS_DEFPUSHBUTTON))
			SetButtonStyle(BS_PUSHBUTTON);
	}

	EnableWindow(bEnable);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuButton::SetCheck
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		ボタンのチェック状態設定
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		BOOL	bCheck		[I] チェック状態（TRUE：チェック，FALSE：非チェック）
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuButton::SetCheck(BOOL bCheck)
{
	CButton::SetCheck(bCheck ? BST_CHECKED : BST_UNCHECKED);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuButton::SetEnableAndCheck
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		ボタンの有効/無効状態とチェック状態設定
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		BOOL	bEnable		[I] 有効/無効状態（TRUE：有効，FALSE：無効）
//		BOOL	bCheck		[I] チェック状態（TRUE：チェック，FALSE：非チェック）
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuButton::SetEnableAndCheck(BOOL bEnable, BOOL bCheck)
{
	SetEnable(bEnable);
	SetCheck(bCheck);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuButton::OnSetState
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		ボタン状態通知
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		WPARAM	wParam		[I] ボタンの状態
//		LPARAM	lParam		[I] 未使用
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		LRESULT		Default()
//*****************************************************************************************************
LRESULT CMenuButton::OnSetState(WPARAM wParam, LPARAM lParam)
{
	// ボタンが押された時と離した時に親ウィンドウにメッセージを送る
	if (GetKeyState(VK_SHIFT) >= 0)
		GetParent()->SendMessage(WM_COMMAND, (wParam ? (BN_PUSHED << 16) : (BN_UNPUSHED << 16)) | GetDlgCtrlID(), (LPARAM)m_hWnd);

	return Default();
}
