//*****************************************************************************************************
//  1. ファイル名
//		MenuFS08_2.cpp
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		自己位置・姿勢標定装置−発射制御器−電力分配器（検知スイッチ）画面の操作メニュー処理
//----------------------------------------------------------------------------------------------------
//  3. 備考
//*****************************************************************************************************

#include "stdafx.h"
#include "Schematic.h"
#include "MenuFS08_2.h"


// CMenuFS08_2 ダイアログ

IMPLEMENT_DYNAMIC(CMenuFS08_2, CMenuCommon)

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::CMenuFS08_2
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		コンストラクタ
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		CWnd*	pParent		[I] 親ウィンドウ
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
CMenuFS08_2::CMenuFS08_2(CWnd* pParent /*=NULL*/)
	: CMenuCommon(CMenuFS08_2::IDD, pParent)
{
}

void CMenuFS08_2::DoDataExchange(CDataExchange* pDX)
{
	CMenuCommon::DoDataExchange(pDX);
	DDX_Control(pDX, IDC_BUTTON_ACTION_12, m_cButtonAction12);
	DDX_Control(pDX, IDC_BUTTON_ACTION_13, m_cButtonAction13);
	DDX_Control(pDX, IDC_BUTTON_ACTION_14, m_cButtonAction14);
	DDX_Control(pDX, IDC_BUTTON_ACTION_15, m_cButtonAction15);
	DDX_Control(pDX, IDC_BUTTON_ACTION_16, m_cButtonAction16);
	DDX_Control(pDX, IDC_BUTTON_ACTION_17, m_cButtonAction17);
	DDX_Control(pDX, IDC_BUTTON_ACTION_18, m_cButtonAction18);
	DDX_Control(pDX, IDC_BUTTON_ACTION_19, m_cButtonAction19);
	DDX_Control(pDX, IDC_BUTTON_ACTION_20, m_cButtonAction20);
	DDX_Control(pDX, IDC_BUTTON_ACTION_21, m_cButtonAction21);
	DDX_Control(pDX, IDC_BUTTON_ACTION_22, m_cButtonAction22);
	DDX_Control(pDX, IDC_BUTTON_ACTION_23, m_cButtonAction23);
	DDX_Control(pDX, IDC_BUTTON_ACTION_24, m_cButtonAction24);
	DDX_Control(pDX, IDC_BUTTON_ACTION_25, m_cButtonAction25);
	DDX_Control(pDX, IDC_BUTTON_ACTION_26, m_cButtonAction26);
	DDX_Control(pDX, IDC_BUTTON_ACTION_27, m_cButtonAction27);
	DDX_Control(pDX, IDC_BUTTON_EXIT, m_cButtonExit);
}


BEGIN_MESSAGE_MAP(CMenuFS08_2, CMenuCommon)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_12, &CMenuFS08_2::OnBnClickedButtonAction12)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_13, &CMenuFS08_2::OnBnClickedButtonAction13)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_14, &CMenuFS08_2::OnBnClickedButtonAction14)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_15, &CMenuFS08_2::OnBnClickedButtonAction15)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_16, &CMenuFS08_2::OnBnClickedButtonAction16)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_17, &CMenuFS08_2::OnBnClickedButtonAction17)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_18, &CMenuFS08_2::OnBnClickedButtonAction18)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_19, &CMenuFS08_2::OnBnClickedButtonAction19)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_20, &CMenuFS08_2::OnBnClickedButtonAction20)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_21, &CMenuFS08_2::OnBnClickedButtonAction21)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_22, &CMenuFS08_2::OnBnClickedButtonAction22)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_23, &CMenuFS08_2::OnBnClickedButtonAction23)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_24, &CMenuFS08_2::OnBnClickedButtonAction24)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_25, &CMenuFS08_2::OnBnClickedButtonAction25)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_26, &CMenuFS08_2::OnBnClickedButtonAction26)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_27, &CMenuFS08_2::OnBnClickedButtonAction27)
END_MESSAGE_MAP()


// CMenuFS08_2 メッセージ ハンドラ

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnInitDialog
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		ダイアログ初期化処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		BOOL	TRUE
//*****************************************************************************************************
BOOL CMenuFS08_2::OnInitDialog()
{
	CMenuCommon::OnInitDialog();

	// 動作ステータス設定
	SetStatus(STATUS_INITIAL);

	return FALSE;
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction12
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「スタート」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction12()
{
	// 動作ステータス設定
	SetStatus(STATUS_WORKING);

	// 検知スイッチ初期値設定
	m_cButtonAction13.SetCheck(TRUE);
	m_cButtonAction14.SetCheck(FALSE);
	m_cButtonAction15.SetCheck(TRUE);
	m_cButtonAction16.SetCheck(FALSE);
	m_cButtonAction17.SetCheck(TRUE);
	m_cButtonAction18.SetCheck(FALSE);
	m_cButtonAction19.SetCheck(TRUE);
	m_cButtonAction20.SetCheck(FALSE);
	m_cButtonAction21.SetCheck(TRUE);
	m_cButtonAction22.SetCheck(FALSE);
	m_cButtonAction23.SetCheck(TRUE);
	m_cButtonAction24.SetCheck(FALSE);
	m_cButtonAction25.SetCheck(FALSE);
	m_cButtonAction26.SetCheck(TRUE);

	// Flashへ操作指示送信
	SendAction(ACTION_12);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction13
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「温度スイッチ：正常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction13()
{
	// Flashへ操作指示送信
	SendAction(ACTION_13);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction14
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「温度スイッチ：異常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction14()
{
	// Flashへ操作指示送信
	SendAction(ACTION_14);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction15
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「圧力スイッチ：正常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction15()
{
	// Flashへ操作指示送信
	SendAction(ACTION_15);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction16
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「圧力スイッチ：異常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction16()
{
	// Flashへ操作指示送信
	SendAction(ACTION_16);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction17
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「ﾌｨﾙﾀ(ﾌﾟﾚｯｼｬ)ｽｲｯﾁ：正常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction17()
{
	// Flashへ操作指示送信
	SendAction(ACTION_17);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction18
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「ﾌｨﾙﾀ(ﾌﾟﾚｯｼｬ)ｽｲｯﾁ：異常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction18()
{
	// Flashへ操作指示送信
	SendAction(ACTION_18);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction19
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「ﾌｨﾙﾀ(ﾘﾀｰﾝ)ｽｲｯﾁ：正常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction19()
{
	// Flashへ操作指示送信
	SendAction(ACTION_19);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction20
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「ﾌｨﾙﾀ(ﾘﾀｰﾝ)ｽｲｯﾁ：異常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction20()
{
	// Flashへ操作指示送信
	SendAction(ACTION_20);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction21
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「油量低下スイッチ：正常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction21()
{
	// Flashへ操作指示送信
	SendAction(ACTION_21);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction22
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「油量低下スイッチ：異常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction22()
{
	// Flashへ操作指示送信
	SendAction(ACTION_22);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction23
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「モータ高温スイッチ：正常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction23()
{
	// Flashへ操作指示送信
	SendAction(ACTION_23);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction24
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「モータ高温スイッチ：異常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction24()
{
	// Flashへ操作指示送信
	SendAction(ACTION_24);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction25
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「プレッシャスイッチ：正常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction25()
{
	// Flashへ操作指示送信
	SendAction(ACTION_25);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction26
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「プレッシャスイッチ：異常」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
// 
void CMenuFS08_2::OnBnClickedButtonAction26()
{
	// Flashへ操作指示送信
	SendAction(ACTION_26);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::OnBnClickedButtonAction27
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「リセット」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::OnBnClickedButtonAction27()
{
	// 動作ステータス設定
	SetStatus(STATUS_INITIAL);

	// Flashへ操作指示送信
	SendAction(ACTION_27);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::SetStatus
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		動作ステータス設定処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		EStatus		eStatus		[I] 設定ステータス
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::SetStatus(EStatus eStatus)
{
	// 動作ステータス設定
	m_eStatus = eStatus;

	// メニューボタン設定
	SetMenuButton();
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS08_2::SetMenuButton
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		メニューボタン設定処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS08_2::SetMenuButton()
{
	switch (m_eStatus) {
	case STATUS_INITIAL:		// 初期状態
		m_cButtonAction12.SetEnableAndCheck(TRUE, FALSE);
		m_cButtonAction13.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction14.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction15.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction16.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction17.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction18.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction19.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction20.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction21.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction22.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction23.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction24.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction25.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction26.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction27.SetEnable(FALSE);
		m_cButtonExit.SetEnable(TRUE);
		break;
	case STATUS_WORKING:		// 検知スイッチ動作中
		m_cButtonAction12.SetEnable(FALSE);
		m_cButtonAction13.SetEnable(TRUE);
		m_cButtonAction14.SetEnable(TRUE);
		m_cButtonAction15.SetEnable(TRUE);
		m_cButtonAction16.SetEnable(TRUE);
		m_cButtonAction17.SetEnable(TRUE);
		m_cButtonAction18.SetEnable(TRUE);
		m_cButtonAction19.SetEnable(TRUE);
		m_cButtonAction20.SetEnable(TRUE);
		m_cButtonAction21.SetEnable(TRUE);
		m_cButtonAction22.SetEnable(TRUE);
		m_cButtonAction23.SetEnable(TRUE);
		m_cButtonAction24.SetEnable(TRUE);
		m_cButtonAction25.SetEnable(TRUE);
		m_cButtonAction26.SetEnable(TRUE);
		m_cButtonAction27.SetEnable(TRUE);
		m_cButtonExit.SetEnable(FALSE);
		break;
	}
}
