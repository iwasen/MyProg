//*****************************************************************************************************
//  1. ファイル名
//		MenuFS16.cpp
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		方位・高低位置検出器及び駆動サーボモータ（機能スケマチック）画面の操作メニュー処理
//----------------------------------------------------------------------------------------------------
//  3. 備考
//*****************************************************************************************************

#include "stdafx.h"
#include "Schematic.h"
#include "MenuFS16.h"


// CMenuFS16 ダイアログ

IMPLEMENT_DYNCREATE(CMenuFS16, CMenuCommon)

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS16::CMenuFS16
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		コンストラクタ
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		CWnd*	pParent		[I] 親ウィンドウ
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
CMenuFS16::CMenuFS16(CWnd* pParent /*=NULL*/)
	: CMenuCommon(CMenuFS16::IDD, pParent)
{
}

void CMenuFS16::DoDataExchange(CDataExchange* pDX)
{
	CMenuCommon::DoDataExchange(pDX);
	DDX_Control(pDX, IDC_BUTTON_ACTION_1, m_cButtonAction1);
	DDX_Control(pDX, IDC_BUTTON_ACTION_2, m_cButtonAction2);
	DDX_Control(pDX, IDC_BUTTON_ACTION_3, m_cButtonAction3);
	DDX_Control(pDX, IDC_BUTTON_ACTION_4, m_cButtonAction4);
	DDX_Control(pDX, IDC_BUTTON_ACTION_5, m_cButtonAction5);
}


BEGIN_MESSAGE_MAP(CMenuFS16, CMenuCommon)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_1, &CMenuFS16::OnBnClickedButtonAction1)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_2, &CMenuFS16::OnBnClickedButtonAction2)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_3, &CMenuFS16::OnBnClickedButtonAction3)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_4, &CMenuFS16::OnBnClickedButtonAction4)
	ON_BN_CLICKED(IDC_BUTTON_ACTION_5, &CMenuFS16::OnBnClickedButtonAction5)
END_MESSAGE_MAP()


// CMenuFS16 メッセージ ハンドラ

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS16::OnInitDialog
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		ダイアログ初期化処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		BOOL	TRUE
//*****************************************************************************************************
BOOL CMenuFS16::OnInitDialog()
{
	CMenuCommon::OnInitDialog();

	// 動作中フラグリセット
	m_bWorking = FALSE;

	// 動作ステータス設定
	SetStatus(STATUS_LPC_INITIAL, STATUS_ANZEN_INITIAL);

	return TRUE;
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS16::OnBnClickedButtonAction1
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「ＬＰ／Ｃ解放」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS16::OnBnClickedButtonAction1()
{
	// 動作中フラグセット
	m_bWorking = TRUE;

	// 動作ステータス設定
	SetStatus(STATUS_LPC_KAIHO, m_eAnzenStatus);

	// Flashへ操作指示送信
	SendAction(ACTION_1);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS16::OnBnClickedButtonAction2
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「ＬＰ／Ｃ固定」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS16::OnBnClickedButtonAction2()
{
	// 動作中フラグセット
	m_bWorking = TRUE;

	// 動作ステータス設定
	SetStatus(STATUS_LPC_KOTEI, m_eAnzenStatus);

	// Flashへ操作指示送信
	SendAction(ACTION_2);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS16::OnBnClickedButtonAction3
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「安全支柱取付」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS16::OnBnClickedButtonAction3()
{
	// 動作中フラグセット
	m_bWorking = TRUE;

	// 動作ステータス設定
	SetStatus(m_eLpcStatus, STATUS_ANZEN_TORITSUKE);

	// Flashへ操作指示送信
	SendAction(ACTION_3);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS16::OnBnClickedButtonAction4
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「安全支柱取外し」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS16::OnBnClickedButtonAction4()
{
	// 動作中フラグセット
	m_bWorking = TRUE;

	// 動作ステータス設定
	SetStatus(m_eLpcStatus, STATUS_ANZEN_TORIHAZUSHI);

	// Flashへ操作指示送信
	SendAction(ACTION_4);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS16::OnBnClickedButtonAction5
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		「リセット」ボタンクリック処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS16::OnBnClickedButtonAction5()
{
	// 動作中フラグリセット
	m_bWorking = FALSE;

	// 動作ステータス設定
	SetStatus(STATUS_LPC_INITIAL, STATUS_ANZEN_INITIAL);

	// Flashへ操作指示送信
	SendAction(ACTION_5);
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS16::ActionEnd
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		Flashからの動作終了通知受信処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		int		nActionNo		[I] アクション番号
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS16::ActionEnd(int nActionNo)
{
	if (m_bWorking) {
		// 動作中フラグリセット
		m_bWorking = FALSE;

		// メニューボタン設定
		SetMenuButton();
	}
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS16::SetStatus
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		動作ステータス設定処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		EStatus		eStatus		[I] 設定ステータス
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS16::SetStatus(ELpcStatus eLpcStatus, EAnzenStatus eAnzenStatus)
{
	// 動作ステータス設定
	m_eLpcStatus = eLpcStatus;
	m_eAnzenStatus = eAnzenStatus;

	// メニューボタン設定
	SetMenuButton();
}

//*****************************************************************************************************
//  1. 関数名
//		CMenuFS16::SetMenuButton
//----------------------------------------------------------------------------------------------------
//  2. 機能
//		メニューボタン設定処理
//----------------------------------------------------------------------------------------------------
//  3. パラメータ
//		無し
//----------------------------------------------------------------------------------------------------
//  4. 戻り値
//		無し
//*****************************************************************************************************
void CMenuFS16::SetMenuButton()
{
	switch (m_eLpcStatus) {
	case STATUS_LPC_INITIAL:
		m_cButtonAction1.SetEnableAndCheck(TRUE, FALSE);
		m_cButtonAction2.SetEnableAndCheck(TRUE, FALSE);
		break;
	case STATUS_LPC_KAIHO:
		m_cButtonAction1.SetEnableAndCheck(FALSE, TRUE);
		m_cButtonAction2.SetEnableAndCheck(TRUE, FALSE);
		break;
	case STATUS_LPC_KOTEI:
		m_cButtonAction1.SetEnableAndCheck(FALSE, FALSE);
		m_cButtonAction2.SetEnableAndCheck(TRUE, TRUE);
		break;
	}

	switch (m_eAnzenStatus) {
	case STATUS_ANZEN_INITIAL:
		m_cButtonAction3.SetEnableAndCheck(TRUE, FALSE);
		m_cButtonAction4.SetEnableAndCheck(TRUE, FALSE);
		break;
	case STATUS_ANZEN_TORITSUKE:
		m_cButtonAction3.SetEnableAndCheck(FALSE, TRUE);
		m_cButtonAction4.SetEnableAndCheck(TRUE, FALSE);
		break;
	case STATUS_ANZEN_TORIHAZUSHI:
		m_cButtonAction3.SetEnableAndCheck(TRUE, FALSE);
		m_cButtonAction4.SetEnableAndCheck(FALSE, TRUE);
		break;
	}

	if (m_bWorking) {
		m_cButtonAction1.SetEnable(FALSE);
		m_cButtonAction2.SetEnable(FALSE);
		m_cButtonAction3.SetEnable(FALSE);
		m_cButtonAction4.SetEnable(FALSE);
		m_cButtonAction5.SetEnable(TRUE);
	} else {
		m_cButtonAction5.SetEnable(m_eLpcStatus != STATUS_LPC_INITIAL || m_eAnzenStatus != STATUS_ANZEN_INITIAL);
	}
}