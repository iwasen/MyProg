#if !defined(AFX_SPREADSHEET_H__EA29953E_DFDE_400A_9AE5_D12750EE12FF__INCLUDED_)
#define AFX_SPREADSHEET_H__EA29953E_DFDE_400A_9AE5_D12750EE12FF__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
//  Microsoft Visual C++ によって自動生成された IDispatch ラップ クラス

// メモ: このファイルの内容を編集しないでください。 このクラスが再度
//  Microsoft Visual C++ で生成された場合、変更を上書きします。

/////////////////////////////////////////////////////////////////////////////
// CSpreadSheet ラップ クラス

class CSpreadSheet : public CWnd
{
protected:
	DECLARE_DYNCREATE(CSpreadSheet)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x857fbbf8, 0xd0c6, 0x44e6, { 0xab, 0x18, 0xd0, 0x31, 0x65, 0x17, 0x3d, 0x42 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// アトリビュート
public:
	long GetActiveCol();
	void SetActiveCol(long);
	long GetActiveRow();
	void SetActiveRow(long);
	BOOL GetAllowCellOverflow();
	void SetAllowCellOverflow(BOOL);
	BOOL GetAllowDragDrop();
	void SetAllowDragDrop(BOOL);
	BOOL GetAllowMultiBlocks();
	void SetAllowMultiBlocks(BOOL);
	BOOL GetAllowUserFormulas();
	void SetAllowUserFormulas(BOOL);
	BOOL GetArrowsExitEditMode();
	void SetArrowsExitEditMode(BOOL);
	BOOL GetAutoCalc();
	void SetAutoCalc(BOOL);
	BOOL GetAutoClipboard();
	void SetAutoClipboard(BOOL);
	BOOL GetAutoSize();
	void SetAutoSize(BOOL);
	BOOL GetBlockMode();
	void SetBlockMode(BOOL);
	long GetButtonDrawMode();
	void SetButtonDrawMode(long);
	long GetCellType();
	void SetCellType(long);
	BOOL GetChangeMade();
	void SetChangeMade(BOOL);
	CString GetClip();
	void SetClip(LPCTSTR);
	CString GetClipValue();
	void SetClipValue(LPCTSTR);
	long GetCol();
	void SetCol(long);
	long GetCol2();
	void SetCol2(long);
	BOOL GetColHidden();
	void SetColHidden(BOOL);
	BOOL GetColPageBreak();
	void SetColPageBreak(BOOL);
	long GetColsFrozen();
	void SetColsFrozen(long);
	long GetCursorStyle();
	void SetCursorStyle(long);
	long GetCursorType();
	void SetCursorType(long);
	BOOL GetDataChanged();
	void SetDataChanged(BOOL);
	long GetDataColCnt();
	void SetDataColCnt(long);
	CString GetDataField();
	void SetDataField(LPCTSTR);
	BOOL GetDataFillEvent();
	void SetDataFillEvent(BOOL);
	long GetDataRowCnt();
	void SetDataRowCnt(long);
	LPUNKNOWN GetDataSource();
	void SetDataSource(LPUNKNOWN);
	BOOL GetDAutoCellTypes();
	void SetDAutoCellTypes(BOOL);
	BOOL GetDAutoFill();
	void SetDAutoFill(BOOL);
	BOOL GetDAutoHeadings();
	void SetDAutoHeadings(BOOL);
	BOOL GetDAutoSave();
	void SetDAutoSave(BOOL);
	long GetDAutoSizeCols();
	void SetDAutoSizeCols(long);
	BOOL GetDInformActiveRowChange();
	void SetDInformActiveRowChange(BOOL);
	long GetEditEnterAction();
	void SetEditEnterAction(long);
	BOOL GetEditMode();
	void SetEditMode(BOOL);
	BOOL GetEditModePermanent();
	void SetEditModePermanent(BOOL);
	BOOL GetEditModeReplace();
	void SetEditModeReplace(BOOL);
	CString GetFormula();
	void SetFormula(LPCTSTR);
	unsigned long GetGrayAreaBackColor();
	void SetGrayAreaBackColor(unsigned long);
	unsigned long GetGridColor();
	void SetGridColor(unsigned long);
	BOOL GetGridShowHoriz();
	void SetGridShowHoriz(BOOL);
	BOOL GetGridShowVert();
	void SetGridShowVert(BOOL);
	BOOL GetGridSolid();
	void SetGridSolid(BOOL);
	long GetHDCPrinter();
	void SetHDCPrinter(long);
	short GetInterfaceDesigner();
	void SetInterfaceDesigner(short);
	BOOL GetIsBlockSelected();
	void SetIsBlockSelected(BOOL);
	long GetLeftCol();
	void SetLeftCol(long);
	BOOL GetLock();
	void SetLock(BOOL);
	unsigned long GetLockBackColor();
	void SetLockBackColor(unsigned long);
	unsigned long GetLockForeColor();
	void SetLockForeColor(unsigned long);
	long GetMaxCols();
	void SetMaxCols(long);
	long GetMaxRows();
	void SetMaxRows(long);
	double GetMaxTextCellHeight();
	void SetMaxTextCellHeight(double);
	double GetMaxTextCellWidth();
	void SetMaxTextCellWidth(double);
	BOOL GetMoveActiveOnFocus();
	void SetMoveActiveOnFocus(BOOL);
	BOOL GetNoBeep();
	void SetNoBeep(BOOL);
	BOOL GetNoBorder();
	void SetNoBorder(BOOL);
	long GetOperationMode();
	void SetOperationMode(long);
	CString GetPrintAbortMsg();
	void SetPrintAbortMsg(LPCTSTR);
	BOOL GetPrintBorder();
	void SetPrintBorder(BOOL);
	BOOL GetPrintColHeaders();
	void SetPrintColHeaders(BOOL);
	BOOL GetPrintColor();
	void SetPrintColor(BOOL);
	CString GetPrintFooter();
	void SetPrintFooter(LPCTSTR);
	BOOL GetPrintGrid();
	void SetPrintGrid(BOOL);
	CString GetPrintHeader();
	void SetPrintHeader(LPCTSTR);
	CString GetPrintJobName();
	void SetPrintJobName(LPCTSTR);
	long GetPrintMarginBottom();
	void SetPrintMarginBottom(long);
	long GetPrintMarginLeft();
	void SetPrintMarginLeft(long);
	long GetPrintMarginRight();
	void SetPrintMarginRight(long);
	long GetPrintMarginTop();
	void SetPrintMarginTop(long);
	short GetPrintPageEnd();
	void SetPrintPageEnd(short);
	short GetPrintPageStart();
	void SetPrintPageStart(short);
	BOOL GetPrintRowHeaders();
	void SetPrintRowHeaders(BOOL);
	BOOL GetPrintShadows();
	void SetPrintShadows(BOOL);
	long GetPrintType();
	void SetPrintType(long);
	BOOL GetPrintUseDataMax();
	void SetPrintUseDataMax(BOOL);
	BOOL GetProcessTab();
	void SetProcessTab(BOOL);
	BOOL GetProtect();
	void SetProtect(BOOL);
	BOOL GetReDraw();
	void SetReDraw(BOOL);
	BOOL GetRestrictCols();
	void SetRestrictCols(BOOL);
	BOOL GetRestrictRows();
	void SetRestrictRows(BOOL);
	BOOL GetRetainSelBlock();
	void SetRetainSelBlock(BOOL);
	long GetRow();
	void SetRow(long);
	long GetRow2();
	void SetRow2(long);
	BOOL GetRowHidden();
	void SetRowHidden(BOOL);
	BOOL GetRowPageBreak();
	void SetRowPageBreak(BOOL);
	long GetRowsFrozen();
	void SetRowsFrozen(long);
	BOOL GetScrollBarExtMode();
	void SetScrollBarExtMode(BOOL);
	BOOL GetScrollBxxxaxAlign();
	void SetScrollBxxxaxAlign(BOOL);
	long GetScrollBars();
	void SetScrollBars(long);
	BOOL GetScrollBarShowMax();
	void SetScrollBarShowMax(BOOL);
	long GetSelBlockCol();
	void SetSelBlockCol(long);
	long GetSelBlockCol2();
	void SetSelBlockCol2(long);
	long GetSelBlockRow();
	void SetSelBlockRow(long);
	long GetSelBlockRow2();
	void SetSelBlockRow2(long);
	long GetSelectBlockOptions();
	void SetSelectBlockOptions(long);
	long GetSelLength();
	void SetSelLength(long);
	long GetSelModeIndex();
	void SetSelModeIndex(long);
	BOOL GetSelModeSelected();
	void SetSelModeSelected(BOOL);
	long GetSelStart();
	void SetSelStart(long);
	CString GetSelText();
	void SetSelText(LPCTSTR);
	unsigned long GetShadowColor();
	void SetShadowColor(unsigned long);
	unsigned long GetShadowDark();
	void SetShadowDark(unsigned long);
	unsigned long GetShadowText();
	void SetShadowText(unsigned long);
	long GetStartingColNumber();
	void SetStartingColNumber(long);
	long GetStartingRowNumber();
	void SetStartingRowNumber(long);
	long GetTopRow();
	void SetTopRow(long);
	long GetTypeButtonAlign();
	void SetTypeButtonAlign(long);
	unsigned long GetTypeButtonBorderColor();
	void SetTypeButtonBorderColor(unsigned long);
	unsigned long GetTypeButtonColor();
	void SetTypeButtonColor(unsigned long);
	unsigned long GetTypeButtonDarkColor();
	void SetTypeButtonDarkColor(unsigned long);
	unsigned long GetTypeButtonLightColor();
	void SetTypeButtonLightColor(unsigned long);
	LPDISPATCH GetTypeButtonPicture();
	void SetTypeButtonPicture(LPDISPATCH);
	LPDISPATCH GetTypeButtonPictureDown();
	void SetTypeButtonPictureDown(LPDISPATCH);
	short GetTypeButtonShadowSize();
	void SetTypeButtonShadowSize(short);
	CString GetTypeButtonText();
	void SetTypeButtonText(LPCTSTR);
	unsigned long GetTypeButtonTextColor();
	void SetTypeButtonTextColor(unsigned long);
	long GetTypeButtonType();
	void SetTypeButtonType(long);
	BOOL GetTypeCheckCenter();
	void SetTypeCheckCenter(BOOL);
	CString GetTypeCheckText();
	void SetTypeCheckText(LPCTSTR);
	long GetTypeCheckTextAlign();
	void SetTypeCheckTextAlign(long);
	short GetTypeComboBoxCount();
	void SetTypeComboBoxCount(short);
	short GetTypeComboBoxCurSel();
	void SetTypeComboBoxCurSel(short);
	BOOL GetTypeComboBoxEditable();
	void SetTypeComboBoxEditable(BOOL);
	short GetTypeComboBoxIndex();
	void SetTypeComboBoxIndex(short);
	CString GetTypeComboBoxList();
	void SetTypeComboBoxList(LPCTSTR);
	CString GetTypeComboBoxString();
	void SetTypeComboBoxString(LPCTSTR);
	BOOL GetTypeDateCentury();
	void SetTypeDateCentury(BOOL);
	long GetTypeDateFormat();
	void SetTypeDateFormat(long);
	CString GetTypeDateMax();
	void SetTypeDateMax(LPCTSTR);
	CString GetTypeDateMin();
	void SetTypeDateMin(LPCTSTR);
	short GetTypeDateSeparator();
	void SetTypeDateSeparator(short);
	long GetTypeEditCharCase();
	void SetTypeEditCharCase(long);
	long GetTypeEditCharSet();
	void SetTypeEditCharSet(long);
	BOOL GetTypeEditMultiLine();
	void SetTypeEditMultiLine(BOOL);
	BOOL GetTypeEditPassword();
	void SetTypeEditPassword(BOOL);
	long GetTypeHAlign();
	void SetTypeHAlign(long);
	long GetTypeOwnerDrawStyle();
	void SetTypeOwnerDrawStyle(long);
	CString GetTypePicDefaultText();
	void SetTypePicDefaultText(LPCTSTR);
	CString GetTypePicMask();
	void SetTypePicMask(LPCTSTR);
	BOOL GetTypePictCenter();
	void SetTypePictCenter(BOOL);
	BOOL GetTypePictMaintainScale();
	void SetTypePictMaintainScale(BOOL);
	LPDISPATCH GetTypePictPicture();
	void SetTypePictPicture(LPDISPATCH);
	BOOL GetTypePictStretch();
	void SetTypePictStretch(BOOL);
	BOOL GetTypeSpin();
	void SetTypeSpin(BOOL);
	BOOL GetTypeTextPrefix();
	void SetTypeTextPrefix(BOOL);
	BOOL GetTypeTextShadow();
	void SetTypeTextShadow(BOOL);
	BOOL GetTypeTextShadowIn();
	void SetTypeTextShadowIn(BOOL);
	BOOL GetTypeTextWordWrap();
	void SetTypeTextWordWrap(BOOL);
	long GetTypeTime24Hour();
	void SetTypeTime24Hour(long);
	CString GetTypeTimeMax();
	void SetTypeTimeMax(LPCTSTR);
	CString GetTypeTimeMin();
	void SetTypeTimeMin(LPCTSTR);
	BOOL GetTypeTimeSeconds();
	void SetTypeTimeSeconds(BOOL);
	short GetTypeTimeSeparator();
	void SetTypeTimeSeparator(short);
	long GetUnitType();
	void SetUnitType(long);
	long GetUserResize();
	void SetUserResize(long);
	long GetUserResizeCol();
	void SetUserResizeCol(long);
	long GetUserResizeRow();
	void SetUserResizeRow(long);
	CString GetValue();
	void SetValue(LPCTSTR);
	long GetVirtualCurRowCount();
	void SetVirtualCurRowCount(long);
	long GetVirtualCurTop();
	void SetVirtualCurTop(long);
	long GetVirtualMaxRows();
	void SetVirtualMaxRows(long);
	BOOL GetVirtualMode();
	void SetVirtualMode(BOOL);
	long GetVirtualOverlap();
	void SetVirtualOverlap(long);
	long GetVirtualRows();
	void SetVirtualRows(long);
	BOOL GetVirtualScrollBuffer();
	void SetVirtualScrollBuffer(BOOL);
	long GetVisibleCols();
	void SetVisibleCols(long);
	long GetVisibleRows();
	void SetVisibleRows(long);
	BOOL GetVScrollSpecial();
	void SetVScrollSpecial(BOOL);
	long GetVScrollSpecialType();
	void SetVScrollSpecialType(long);
	BOOL GetFontBold();
	void SetFontBold(BOOL);
	BOOL GetFontItalic();
	void SetFontItalic(BOOL);
	CString GetFontName();
	void SetFontName(LPCTSTR);
	float GetFontSize();
	void SetFontSize(float);
	BOOL GetFontStrikethru();
	void SetFontStrikethru(BOOL);
	BOOL GetFontUnderline();
	void SetFontUnderline(BOOL);
	LPDISPATCH GetCursorIcon();
	void SetCursorIcon(LPDISPATCH);
	long GetPrintOrientation();
	void SetPrintOrientation(long);
	long GetBackColorStyle();
	void SetBackColorStyle(long);
	BOOL GetFormulaSync();
	void SetFormulaSync(BOOL);
	long GetTypeCheckType();
	void SetTypeCheckType(long);
	long GetAppearance();
	void SetAppearance(long);
	short GetTypeComboBoxMaxDrop();
	void SetTypeComboBoxMaxDrop(short);
	short GetTypeMaxEditLen();
	void SetTypeMaxEditLen(short);
	short GetTypeComboBoxWidth();
	void SetTypeComboBoxWidth(short);
	long GetTextTip();
	void SetTextTip(long);
	long GetTextTipDelay();
	void SetTextTipDelay(long);
	long GetScrollBarTrack();
	void SetScrollBarTrack(long);
	long GetTypeVAlign();
	void SetTypeVAlign(long);
	long GetClipboardOptions();
	void SetClipboardOptions(long);
	long GetPrintPageOrder();
	void SetPrintPageOrder(long);
	long GetPrintPageCount();
	void SetPrintPageCount(long);
	long GetPrintFirstPageNumber();
	void SetPrintFirstPageNumber(long);
	long GetPrintNextPageBreakCol();
	void SetPrintNextPageBreakCol(long);
	long GetPrintNextPageBreakRow();
	void SetPrintNextPageBreakRow(long);
	long GetTypeComboBoxhWnd();
	void SetTypeComboBoxhWnd(long);
	unsigned long GetSelBackColor();
	void SetSelBackColor(unsigned long);
	unsigned long GetSelForeColor();
	void SetSelForeColor(unsigned long);
	short GetTwoDigitYexxxax();
	void SetTwoDigitYexxxax(short);
	long GetOLEDropMode();
	void SetOLEDropMode(long);
	CString GetDataMember();
	void SetDataMember(LPCTSTR);
	CString GetCellNote();
	void SetCellNote(LPCTSTR);
	long GetUserColAction();
	void SetUserColAction(long);
	long GetShowScrollTips();
	void SetShowScrollTips(long);
	long GetCellNoteIndicator();
	void SetCellNoteIndicator(long);
	BOOL GetTypeEllipses();
	void SetTypeEllipses(BOOL);
	BOOL GetScriptEnhanced();
	void SetScriptEnhanced(BOOL);
	long GetCxxxerge();
	void SetCxxxerge(long);
	long GetRowMerge();
	void SetRowMerge(long);
	CString GetColID();
	void SetColID(LPCTSTR);
	long GetRowHeaderCols();
	void SetRowHeaderCols(long);
	long GetRowHeadersAutoTextIndex();
	void SetRowHeadersAutoTextIndex(long);
	long GetColHeaderRows();
	void SetColHeaderRows(long);
	long GetColHeadersAutoTextIndex();
	void SetColHeadersAutoTextIndex(long);
	long GetColHeadersUserSortIndex();
	void SetColHeadersUserSortIndex(long);
	long GetTypeComboBoxAutoSearch();
	void SetTypeComboBoxAutoSearch(long);
	double GetTypeSpinInc();
	void SetTypeSpinInc(double);
	BOOL GetTypeSpinWrap();
	void SetTypeSpinWrap(BOOL);
	BOOL GetTypeNegRed();
	void SetTypeNegRed(BOOL);
	double GetTypeCurrencyMin();
	void SetTypeCurrencyMin(double);
	double GetTypeCurrencyMax();
	void SetTypeCurrencyMax(double);
	CString GetTypeCurrencyDecimal();
	void SetTypeCurrencyDecimal(LPCTSTR);
	CString GetTypeCurrencySeparator();
	void SetTypeCurrencySeparator(LPCTSTR);
	CString GetTypeCurrencySymbol();
	void SetTypeCurrencySymbol(LPCTSTR);
	long GetTypeCurrencyLeadingZero();
	void SetTypeCurrencyLeadingZero(long);
	short GetTypeCurrencyDecPlaces();
	void SetTypeCurrencyDecPlaces(short);
	long GetTypeCurrencyNegStyle();
	void SetTypeCurrencyNegStyle(long);
	long GetTypeCurrencyPosStyle();
	void SetTypeCurrencyPosStyle(long);
	BOOL GetTypeCurrencyShowSep();
	void SetTypeCurrencyShowSep(BOOL);
	BOOL GetTypeCurrencyShowSymbol();
	void SetTypeCurrencyShowSymbol(BOOL);
	double GetTypeNumberMin();
	void SetTypeNumberMin(double);
	double GetTypeNumberMax();
	void SetTypeNumberMax(double);
	CString GetTypeNumberDecimal();
	void SetTypeNumberDecimal(LPCTSTR);
	CString GetTypeNumberSeparator();
	void SetTypeNumberSeparator(LPCTSTR);
	long GetTypeNumberLeadingZero();
	void SetTypeNumberLeadingZero(long);
	short GetTypeNumberDecPlaces();
	void SetTypeNumberDecPlaces(short);
	long GetTypeNumberNegStyle();
	void SetTypeNumberNegStyle(long);
	BOOL GetTypeNumberShowSep();
	void SetTypeNumberShowSep(BOOL);
	double GetTypePercentMin();
	void SetTypePercentMin(double);
	double GetTypePercentMax();
	void SetTypePercentMax(double);
	CString GetTypePercentDecimal();
	void SetTypePercentDecimal(LPCTSTR);
	short GetTypePercentDecPlaces();
	void SetTypePercentDecPlaces(short);
	long GetTypePercentNegStyle();
	void SetTypePercentNegStyle(long);
	long GetTypeTextOrient();
	void SetTypeTextOrient(long);
	CString GetCellTag();
	void SetCellTag(LPCTSTR);
	BOOL GetAllowEditOverflow();
	void SetAllowEditOverflow(BOOL);
	long GetColHeadersAutoText();
	void SetColHeadersAutoText(long);
	BOOL GetColHeadersShow();
	void SetColHeadersShow(BOOL);
	long GetRowHeadersAutoText();
	void SetRowHeadersAutoText(long);
	BOOL GetRowHeadersShow();
	void SetRowHeadersShow(BOOL);
	long GetTypePercentLeadingZero();
	void SetTypePercentLeadingZero(long);
	short GetSheetCount();
	void SetSheetCount(short);
	short GetActiveSheet();
	void SetActiveSheet(short);
	short GetTabStripLeftSheet();
	void SetTabStripLeftSheet(short);
	LPDISPATCH GetTabStripFont();
	void SetTabStripFont(LPDISPATCH);
	CString GetSheetName();
	void SetSheetName(LPCTSTR);
	long GetTabStripPolicy();
	void SetTabStripPolicy(long);
	double GetTabStripRatio();
	void SetTabStripRatio(double);
	double GetPrintZoomFactor();
	void SetPrintZoomFactor(double);
	short GetScrollBarWidth();
	void SetScrollBarWidth(short);
	short GetScrollBarHeight();
	void SetScrollBarHeight(short);
	long GetActiveCellHighlightStyle();
	void SetActiveCellHighlightStyle(long);
	long GetPrintScalingMethod();
	void SetPrintScalingMethod(long);
	short GetPrintBestFitPagesWide();
	void SetPrintBestFitPagesWide(short);
	short GetPrintBestFitPagesTall();
	void SetPrintBestFitPagesTall(short);
	BOOL GetPrintCenterOnPageH();
	void SetPrintCenterOnPageH(BOOL);
	BOOL GetPrintCenterOnPageV();
	void SetPrintCenterOnPageV(BOOL);
	BOOL GetAllowCxxxove();
	void SetAllowCxxxove(BOOL);
	BOOL GetAllowRowMove();
	void SetAllowRowMove(BOOL);
	double GetTypeScientificMin();
	void SetTypeScientificMin(double);
	double GetTypeScientificMax();
	void SetTypeScientificMax(double);
	CString GetTypeScientificDecimal();
	void SetTypeScientificDecimal(LPCTSTR);
	short GetTypeScientificDecPlaces();
	void SetTypeScientificDecPlaces(short);
	unsigned long GetScrollBarHColor();
	void SetScrollBarHColor(unsigned long);
	unsigned long GetScrollBarVColor();
	void SetScrollBarVColor(unsigned long);
	short GetSheet();
	void SetSheet(short);
	short GetSheetSendingEvent();
	void SetSheetSendingEvent(short);
	BOOL GetSheetVisible();
	void SetSheetVisible(BOOL);
	long GetSelectionCount();
	void SetSelectionCount(long);
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	short GetBorderStyle();
	void SetBorderStyle(short);
	BOOL GetEnabled();
	void SetEnabled(BOOL);
	LPFONTDISP GetFont();
	void SetFont(LPFONTDISP);
	OLE_COLOR GetForeColor();
	void SetForeColor(OLE_COLOR);
	OLE_HANDLE GetHWnd();
	void SetHWnd(OLE_HANDLE);
	CString GetText();
	void SetText(LPCTSTR);

// オペレーション
public:
	double GetColWidth(long lCol);
	void SetColWidth(long lCol, double newValue);
	double GetMaxTextColWidth(long lCol);
	void SetMaxTextColWidth(long lCol, double newValue);
	double GetMaxTextRowHeight(long lRow);
	void SetMaxTextRowHeight(long lRow, double newValue);
	double GetRowHeight(long lRow);
	void SetRowHeight(long lRow, double newValue);
	long GetSortKey(short nIndex);
	void SetSortKey(short nIndex, long nNewValue);
	long GetSortKeyOrder(short nIndex);
	void SetSortKeyOrder(short nIndex, long nNewValue);
	LPDISPATCH GetTypeCheckPicture(short Index);
	void SetTypeCheckPicture(short Index, LPDISPATCH newValue);
	BOOL AddCustomFunction(LPCTSTR FunctionName, short ParameterCnt);
	BOOL AddCustomFunctionExt(LPCTSTR FunctionName, short MinParamCnt, short MaxParamCnt, long Flags);
	void CFGetCellParam(short Param, long* Col, long* Row);
	double CFGetDoubleParam(short Param);
	double CFGetDoubleParamExt(short Param, double* ParamValue);
	long CFGetLongParam(short Param);
	BOOL CFGetParamInfo(short Param, long* Type, long* Status);
	void CFGetRangeParam(short Param, long* Col, long* Row, long* Col2, long* Row2);
	CString CFGetStringParam(short Param);
	void CFSetResult(const VARIANT& Var);
	CString ColNumberToLetter(long HeaderNumber);
	void ColWidthToTwips(float Width, long* Twips);
	void GetBottomRightCell(long* Col, long* Row);
	BOOL GetCellDirtyFlag(long Col, long Row);
	void GetCellFromScreenCoord(long* Col, long* Row, long x, long y);
	BOOL GetCellPos(long Col, long Row, long* x, long* y, long* Width, long* Height);
	void GetClientArea(long* Width, long* Height);
	long GetColItemData(long Col);
	CString QueryCustomName(LPCTSTR Name);
	CString GetCustomName(LPCTSTR Name);
	BOOL GetDataFillData(VARIANT* Var, short VarType);
	void GetFirstValidCell(long* Col, long* Row);
	long GetItemData();
	BOOL GetIteration(short* MaxIterations, double* MaxChange);
	void GetLastValidCell(long* Col, long* Row);
	long GetMultiSelItem(long SelPrev);
	long GetRefStyle();
	long GetRowItemData(long Row);
	BOOL GetText(long Col, long Row, VARIANT* Var);
	BOOL IsCellSelected(long Col, long Row);
	BOOL IsFormulaValid(LPCTSTR Formula);
	BOOL IsVisible(long Col, long Row, BOOL Partial);
	BOOL LoadFromFile(LPCTSTR FileName);
	BOOL LoadTabFile(LPCTSTR FileName);
	void RowHeightToTwips(long Row, float Height, long* Twips);
	BOOL SaveTabFile(LPCTSTR FileName);
	BOOL SaveToFile(LPCTSTR FileName, BOOL DataOnly);
	BOOL SetCellDirtyFlag(long Col, long Row, BOOL Dirty);
	void SetColItemData(long Col, long Value);
	BOOL SetCustomName(LPCTSTR Name, LPCTSTR Value);
	BOOL SetDataFillData(const VARIANT& Var);
	void SetItemData(long Value);
	void SetIteration(BOOL Iteration, short MaxIterations, double MaxChange);
	void SetRefStyle(long RefStyle);
	void SetRowItemData(long Row, long Value);
	void SetText(long Col, long Row, const VARIANT& Var);
	void TwipsToColWidth(long Twips, float* ColWidth);
	void TwipsToRowHeight(long Row, long Twips, float* RowHeight);
	BOOL GetActionKey(long Action, BOOL* fShift, BOOL* fCtrl, short* Key);
	BOOL SetActionKey(long Action, BOOL fShift, BOOL fCtrl, short Key);
	BOOL GetOddEvenRowColor(long* clrBackOdd, long* clrForeOdd, long* clrBackEven, long* clrForeEven);
	BOOL SetOddEvenRowColor(long clrBackOdd, long clrForeOdd, long clrBackEven, long clrForeEven);
	BOOL GetFloat(long Col, long Row, double* Value);
	BOOL SetFloat(long Col, long Row, double Value);
	BOOL GetInteger(long Col, long Row, long* Value);
	BOOL SetInteger(long Col, long Row, long Value);
	void SetCalText(LPCTSTR ShortDays, LPCTSTR LongDays, LPCTSTR ShortMonths, LPCTSTR LongMonths, LPCTSTR OkText, LPCTSTR CancelText);
	BOOL GetTextTipAppearance(BSTR* FontName, short* FontSize, BOOL* FontBold, BOOL* FontItalic, long* BackColor, long* ForeColor);
	BOOL SetTextTipAppearance(LPCTSTR FontName, short FontSize, BOOL FontBold, BOOL FontItalic, long BackColor, long ForeColor);
	BOOL ExportToHTML(LPCTSTR FileName, BOOL AppendFlag, LPCTSTR LogFile);
	BOOL ExportRangeToHTML(long Col, long Row, long Col2, long Row2, LPCTSTR FileName, BOOL AppendFlag, LPCTSTR LogFile);
	BOOL GetArray(long ColLeft, long RowTop, const VARIANT& VarArray);
	BOOL SetArray(long ColLeft, long RowTop, const VARIANT& VarArray);
	short IsExcelFile(LPCTSTR FileName);
	BOOL GetExcelSheetList(LPCTSTR FileName, const VARIANT& VarArray, short* Lixxxount, LPCTSTR LogFileName, short* WorkbookHandle, BOOL Replace);
	BOOL ImportExcelSheet(short WorkbookHandle, const VARIANT& Sheet);
	BOOL ExportToExcel(LPCTSTR FileName, LPCTSTR SheetName, LPCTSTR LogFileName);
	BOOL EnumCustomFunction(LPCTSTR PrevFuncName, BSTR* FuncName);
	BOOL GetCustomFunction(LPCTSTR FuncName, short* MinArgs, short* MaxArgs, long* Flags);
	BOOL RemoveCustomFunction(LPCTSTR FuncName);
	BOOL ReCalcCell(long Col, long Row);
	void OLEDrag();
	long GetColUserSortIndicator(long lCol);
	void SetColUserSortIndicator(long lCol, long nNewValue);
	BOOL IsFetchCellNote();
	BOOL ExportToXML(LPCTSTR FileName, LPCTSTR Root, LPCTSTR Collection, long Flags, LPCTSTR LogFile);
	BOOL ExportRangeToXML(long Col, long Row, long Col2, long Row2, LPCTSTR FileName, LPCTSTR Root, LPCTSTR Collection, long Flags, LPCTSTR LogFile);
	BOOL ExportToXMLBuffer(LPCTSTR Root, LPCTSTR Collection, BSTR* Buff, long Flags, LPCTSTR LogFile);
	BOOL ExportRangeToXMLBuffer(long Col, long Row, long Col2, long Row2, LPCTSTR Root, LPCTSTR Collection, BSTR* Buff, long Flags, LPCTSTR LogFile);
	BOOL OwnerPrintDraw(long hDC, long Left, long Top, long Right, long Bottom, short Page);
	BOOL OwnerPrintPageCount(long hDC, long Left, long Top, long Right, long Bottom, short* PageCount);
	BOOL ExportRangeToTextFile(long Col, long Row, long Col2, long Row2, LPCTSTR FileName, LPCTSTR CellDelim, LPCTSTR ColDelim, LPCTSTR RowDelim, long Flags, LPCTSTR LogFile);
	BOOL ExportToTextFile(LPCTSTR FileName, LPCTSTR CellDelim, LPCTSTR ColDelim, LPCTSTR RowDelim, long Flags, LPCTSTR LogFile);
	BOOL LoadTextFile(LPCTSTR FileName, LPCTSTR CellDelim, LPCTSTR ColDelim, LPCTSTR RowDelim, long Flags, LPCTSTR LogFile);
	void SetCalTextOverride(LPCTSTR ShortDays, LPCTSTR LongDays, LPCTSTR ShortMonths, LPCTSTR LongMonths, LPCTSTR OkText, LPCTSTR CancelText);
	void GetCalTextOverride(BSTR* ShortDays, short* LenShortDays, BSTR* LongDays, short* LenLongDays, BSTR* ShortMonths, short* LenShortMonths, BSTR* LongMonths, short* LenLongMonths, BSTR* OkText, short* LenOkText, BSTR* CancelText,
		short* LenCancelText);
	void ScriptCFGetCellParam(short Param, VARIANT* Col, VARIANT* Row);
	double ScriptCFGetDoubleParamExt(short Param, VARIANT* ParamValue);
	BOOL ScriptCFGetParamInfo(short Param, VARIANT* Type, VARIANT* Status);
	void ScriptCFGetRangeParam(short Param, VARIANT* Col, VARIANT* Row, VARIANT* Col2, VARIANT* Row2);
	void ScriptColWidthToTwips(float Width, VARIANT* Twips);
	void ScriptGetBottomRightCell(VARIANT* Col, VARIANT* Row);
	void ScriptGetCellFromScreenCoord(VARIANT* Col, VARIANT* Row, long x, long y);
	BOOL ScriptGetCellPos(long Col, long Row, VARIANT* x, VARIANT* y, VARIANT* Width, VARIANT* Height);
	void ScriptGetClientArea(VARIANT* Width, VARIANT* Height);
	void ScriptGetFirstValidCell(VARIANT* Col, VARIANT* Row);
	BOOL ScriptGetIteration(VARIANT* MaxIterations, VARIANT* MaxChange);
	void ScriptGetLastValidCell(VARIANT* Col, VARIANT* Row);
	void ScriptRowHeightToTwips(long Row, float Height, VARIANT* Twips);
	void ScriptTwipsToColWidth(long Twips, VARIANT* ColWidth);
	void ScriptTwipsToRowHeight(long Row, long Twips, VARIANT* RowHeight);
	BOOL ScriptGetActionKey(short Action, VARIANT* fShift, VARIANT* fCtrl, VARIANT* Key);
	BOOL ScriptGetOddEvenRowColor(VARIANT* clrBackOdd, VARIANT* clrForeOdd, VARIANT* clrBackEven, VARIANT* clrForeEven);
	BOOL ScriptGetFloat(long Col, long Row, VARIANT* Value);
	BOOL ScriptGetInteger(long Col, long Row, VARIANT* Value);
	BOOL ScriptGetTextTipAppearance(VARIANT* FontName, VARIANT* FontSize, VARIANT* FontBold, VARIANT* FontItalic, VARIANT* BackColor, VARIANT* ForeColor);
	BOOL ScriptGetExcelSheetList(LPCTSTR FileName, const VARIANT& VarArray, VARIANT* Lixxxount, LPCTSTR LogFileName, VARIANT* WorkbookHandle, BOOL Replace);
	BOOL ScriptEnumCustomFunction(LPCTSTR PrevFuncName, VARIANT* FuncName);
	BOOL ScriptGetCustomFunction(LPCTSTR FuncName, VARIANT* MinArgs, VARIANT* MaxArgs, VARIANT* Flags);
	BOOL ScriptExportToXMLBuffer(LPCTSTR Root, LPCTSTR Collection, VARIANT* Buff, long Flags, LPCTSTR LogFile);
	BOOL ScriptExportRangeToXMLBuffer(long Col, long Row, long Col2, long Row2, LPCTSTR Root, LPCTSTR Collection, VARIANT* Buff, long Flags, LPCTSTR LogFile);
	long ScriptOwnerPrintPageCount(long hDC, long Left, long Top, long Right, long Bottom, VARIANT* PageCount);
	void ScriptGetCalTextOverride(VARIANT* ShortDays, VARIANT* LenShortDays, VARIANT* LongDays, VARIANT* LenLongDays, VARIANT* ShortMonths, VARIANT* LenShortMonths, VARIANT* LongMonths, VARIANT* LenLongMonths, VARIANT* OkText, VARIANT* LenOkText,
		VARIANT* CancelText, VARIANT* LenCancelText);
	void PrintSheet(VARIANT* Flags);
	void AddSelection(long lCol, long lRow, long lCol2, long lRow2);
	void ClearRange(long lCol, long lRow, long lCol2, long lRow2, BOOL bDataOnly);
	void ClearSelection();
	void ClipboardCopy();
	void ClipboardCut();
	void ClipboardPaste();
	void CopyRange(long lCol, long lRow, long lCol2, long lRow2, long lColDest, long lRowDest);
	void DeleteCols(long lCol, long lNumCols);
	void DeleteRows(long lRow, long lNumRows);
	void DataSave();
	void GetCellBorder(long lCol, long lRow, long nIndex, VARIANT* pcrColor, VARIANT* pnStyle);
	void GetSelection(long lIndex, VARIANT* plCol, VARIANT* plRow, VARIANT* plCol2, VARIANT* plRow2);
	void InsertCols(long lCol, long lNumCols);
	void InsertRows(long lRow, long lNumRows);
	void MoveRange(long lCol, long lRow, long lCol2, long lRow2, long lColDest, long lRowDest);
	void ReCalc();
	void Reset();
	void SetActiveCell(long lCol, long lRow);
	void SetCellBorder(long lCol, long lRow, long lCol2, long lRow2, long nIndex, unsigned long crColor, long nStyle);
	void SetSelection(long lCol, long lRow, long lCol2, long lRow2);
	void ShowCell(long lCol, long lRow, long nPosition);
	BOOL Sort(long lCol, long lRow, long lCol2, long lRow2, long nSortBy, VARIANT* SortKeys, VARIANT* SortKeyOrders);
	void SwapRange(long lCol, long lRow, long lCol2, long lRow2, long lColDest, long lRowDest);
	void TypeComboBoxClear(long lCol, long lRow);
	void TypeComboBoxRemoveItem(long lCol, long lRow, short nIndex);
	void VirtualRefresh();
	BOOL AddCellSpan(long lCol, long lRow, long lNumCols, long lNumRows);
	long GetCellSpan(long lCol, long lRow, VARIANT* pvColAnchor, VARIANT* pvRowAnchor, VARIANT* pvNumCols, VARIANT* pvNumRows);
	void RemoveCellSpan(long lCol, long lRow);
	long GetColFromID(LPCTSTR ColID);
	void CopyColRange(long lCol, long lCol2, long lColDest);
	void CopyRowRange(long lRow, long lRow2, long lRowDest);
	void MoveColRange(long lCol, long lCol2, long lColDest);
	void MoveRowRange(long lRow, long lRow2, long lRowDest);
	void SwapColRange(long lCol, long lCol2, long lColDest);
	void SwapRowRange(long lRow, long lRow2, long lRowDest);
	long SearchCol(long lCol, long lRowStart, long lRowEnd, LPCTSTR Text, long SearchFlags);
	long SearchRow(long lRow, long lColStart, long lColEnd, LPCTSTR Text, long SearchFlags);
	BOOL GetEventEnabled(short EventID);
	void SetEventEnabled(short EventID, BOOL bNewValue);
	BOOL ExportRangeToTextFileU(long Col, long Row, long Col2, long Row2, LPCTSTR FileName, LPCTSTR CellDelim, LPCTSTR ColDelim, LPCTSTR RowDelim, long Flags, LPCTSTR LogFile);
	BOOL ExportToTextFileU(LPCTSTR FileName, LPCTSTR CellDelim, LPCTSTR ColDelim, LPCTSTR RowDelim, long Flags, LPCTSTR LogFile);
	BOOL SaveTabFileU(LPCTSTR FileName);
	long ColLetterToNumber(LPCTSTR HeaderLetter);
	void DataRefresh();
	BOOL ImportExcelBook(LPCTSTR FileName, LPCTSTR LogFileName);
	BOOL ExportExcelBook(LPCTSTR FileName, LPCTSTR LogFileName);
	BOOL InsertSheets(short SheetIndex, short SheetCnt);
	BOOL DeleteSheets(short SheetIndex, short SheetCnt);
	BOOL MoveSheets(short SheetSrc, short SheetCnt, short SheetDest);
	BOOL ResetSheet(short Sheet);
	LPDISPATCH LoadPicture(LPCTSTR FileName, long PictType);
	LPDISPATCH LoadResPicture(long hInstance, LPCTSTR ResourceName, LPCTSTR ResourceType, long PictType);
	LPDISPATCH LoadPictureBuffer(VARIANT* Buffer, VARIANT* Size, long PictType);
	BOOL SavePicture(LPDISPATCH Picture, LPCTSTR FileName, long PictType);
	BOOL SavePictureBuffer(LPDISPATCH Picture, long PictType, VARIANT* Buffer, VARIANT* Size);
	void CFGetCellParamExt(short Param, short* Sheet, long* Col, long* Row);
	void CFGetRangeParamExt(short Param, short* Sheet, long* Col, long* Row, long* Col2, long* Row2);
	void ScriptCFGetCellParamExt(short Param, VARIANT* Sheet, VARIANT* Col, VARIANT* Row);
	void ScriptCFGetRangeParamExt(short Param, VARIANT* Sheet, VARIANT* Col, VARIANT* Row, VARIANT* Col2, VARIANT* Row2);
	BOOL ExportToExcelEx(LPCTSTR FileName, LPCTSTR SheetName, LPCTSTR LogFileName, long Flags);
	BOOL ExportExcelBookEx(LPCTSTR FileName, LPCTSTR LogFileName, long Flags);
	void Refresh();
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ は前行の直前に追加の宣言を挿入します。

#endif // !defined(AFX_SPREADSHEET_H__EA29953E_DFDE_400A_9AE5_D12750EE12FF__INCLUDED_)
